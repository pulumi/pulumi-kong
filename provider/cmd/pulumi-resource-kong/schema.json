{
    "name": "kong",
    "description": "A Pulumi package for creating and managing Kong resources.",
    "keywords": [
        "pulumi",
        "kong"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`kong` Terraform Provider](https://github.com/kevholditch/terraform-provider-kong).",
    "repository": "https://github.com/pulumi/pulumi-kong",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "kongAdminPassword": {
                "type": "string",
                "description": "An basic auth password for kong admin\n"
            },
            "kongAdminToken": {
                "type": "string",
                "description": "API key for the kong api (Enterprise Edition)\n"
            },
            "kongAdminUri": {
                "type": "string",
                "description": "The address of the kong admin url e.g. http://localhost:8001\n"
            },
            "kongAdminUsername": {
                "type": "string",
                "description": "An basic auth user for kong admin\n"
            },
            "kongApiKey": {
                "type": "string",
                "description": "API key for the kong api (if you have locked it down)\n"
            },
            "strictPluginsMatch": {
                "type": "boolean",
                "description": "Should plugins `config_json` field strictly match plugin configuration\n",
                "defaultInfo": {
                    "environment": [
                        "STRICT_PLUGINS_MATCH"
                    ]
                }
            },
            "tlsSkipVerify": {
                "type": "boolean",
                "description": "Whether to skip tls verify for https kong api endpoint using self signed or untrusted certs\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "TLS_SKIP_VERIFY"
                    ]
                }
            }
        },
        "defaults": [
            "kongAdminUri"
        ]
    },
    "types": {
        "kong:index/RouteDestination:RouteDestination": {
            "properties": {
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kong:index/RouteSource:RouteSource": {
            "properties": {
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kong:index/UpstreamHealthchecks:UpstreamHealthchecks": {
            "properties": {
                "active": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecksActive:UpstreamHealthchecksActive",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passive": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecksPassive:UpstreamHealthchecksPassive",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "active",
                        "passive"
                    ]
                }
            }
        },
        "kong:index/UpstreamHealthchecksActive:UpstreamHealthchecksActive": {
            "properties": {
                "concurrency": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthy": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecksActiveHealthy:UpstreamHealthchecksActiveHealthy",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsSni": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpsVerifyCertificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unhealthy": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecksActiveUnhealthy:UpstreamHealthchecksActiveUnhealthy",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "healthy",
                        "unhealthy"
                    ]
                }
            }
        },
        "kong:index/UpstreamHealthchecksActiveHealthy:UpstreamHealthchecksActiveHealthy": {
            "properties": {
                "httpStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "successes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpStatuses",
                        "interval",
                        "successes"
                    ]
                }
            }
        },
        "kong:index/UpstreamHealthchecksActiveUnhealthy:UpstreamHealthchecksActiveUnhealthy": {
            "properties": {
                "httpFailures": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcpFailures": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeouts": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpFailures",
                        "httpStatuses",
                        "interval",
                        "tcpFailures",
                        "timeouts"
                    ]
                }
            }
        },
        "kong:index/UpstreamHealthchecksPassive:UpstreamHealthchecksPassive": {
            "properties": {
                "healthy": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecksPassiveHealthy:UpstreamHealthchecksPassiveHealthy",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unhealthy": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecksPassiveUnhealthy:UpstreamHealthchecksPassiveUnhealthy",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "healthy",
                        "unhealthy"
                    ]
                }
            }
        },
        "kong:index/UpstreamHealthchecksPassiveHealthy:UpstreamHealthchecksPassiveHealthy": {
            "properties": {
                "httpStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "successes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kong:index/UpstreamHealthchecksPassiveUnhealthy:UpstreamHealthchecksPassiveUnhealthy": {
            "properties": {
                "httpFailures": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpStatuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcpFailures": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeouts": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the kong package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "kongAdminPassword": {
                "type": "string",
                "description": "An basic auth password for kong admin\n"
            },
            "kongAdminToken": {
                "type": "string",
                "description": "API key for the kong api (Enterprise Edition)\n"
            },
            "kongAdminUri": {
                "type": "string",
                "description": "The address of the kong admin url e.g. http://localhost:8001\n"
            },
            "kongAdminUsername": {
                "type": "string",
                "description": "An basic auth user for kong admin\n"
            },
            "kongApiKey": {
                "type": "string",
                "description": "API key for the kong api (if you have locked it down)\n"
            },
            "strictPluginsMatch": {
                "type": "boolean",
                "description": "Should plugins `config_json` field strictly match plugin configuration\n",
                "defaultInfo": {
                    "environment": [
                        "STRICT_PLUGINS_MATCH"
                    ]
                }
            },
            "tlsSkipVerify": {
                "type": "boolean",
                "description": "Whether to skip tls verify for https kong api endpoint using self signed or untrusted certs\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "TLS_SKIP_VERIFY"
                    ]
                }
            }
        },
        "requiredInputs": [
            "kongAdminUri"
        ]
    },
    "resources": {
        "kong:index/certificate:Certificate": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "Cert"
                        }
                    }
                },
                "privateKey": {
                    "type": "string"
                }
            },
            "required": [
                "certificate"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "Cert"
                        }
                    }
                },
                "privateKey": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "certificate"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "language": {
                            "csharp": {
                                "name": "Cert"
                            }
                        }
                    },
                    "privateKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/consumer:Consumer": {
            "properties": {
                "customId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "username"
            ],
            "inputProperties": {
                "customId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Consumer resources.\n",
                "properties": {
                    "customId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/consumerPluginConfig:ConsumerPluginConfig": {
            "properties": {
                "computedConfig": {
                    "type": "string"
                },
                "configJson": {
                    "type": "string",
                    "description": "JSON format of plugin config\n"
                },
                "consumerId": {
                    "type": "string"
                },
                "pluginName": {
                    "type": "string"
                }
            },
            "required": [
                "computedConfig",
                "consumerId",
                "pluginName"
            ],
            "inputProperties": {
                "configJson": {
                    "type": "string",
                    "description": "JSON format of plugin config\n"
                },
                "consumerId": {
                    "type": "string"
                },
                "pluginName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "consumerId",
                "pluginName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConsumerPluginConfig resources.\n",
                "properties": {
                    "computedConfig": {
                        "type": "string"
                    },
                    "configJson": {
                        "type": "string",
                        "description": "JSON format of plugin config\n"
                    },
                    "consumerId": {
                        "type": "string"
                    },
                    "pluginName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/plugin:Plugin": {
            "properties": {
                "computedConfig": {
                    "type": "string"
                },
                "configJson": {
                    "type": "string",
                    "description": "plugin configuration in JSON format, configuration must be a valid JSON object.\n"
                },
                "consumerId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "routeId": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "strictMatch": {
                    "type": "boolean"
                }
            },
            "required": [
                "computedConfig",
                "name"
            ],
            "inputProperties": {
                "configJson": {
                    "type": "string",
                    "description": "plugin configuration in JSON format, configuration must be a valid JSON object.\n"
                },
                "consumerId": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "routeId": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "strictMatch": {
                    "type": "boolean"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Plugin resources.\n",
                "properties": {
                    "computedConfig": {
                        "type": "string"
                    },
                    "configJson": {
                        "type": "string",
                        "description": "plugin configuration in JSON format, configuration must be a valid JSON object.\n"
                    },
                    "consumerId": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "routeId": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "strictMatch": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/route:Route": {
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kong:index/RouteDestination:RouteDestination"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preserveHost": {
                    "type": "boolean"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "regexPriority": {
                    "type": "integer"
                },
                "serviceId": {
                    "type": "string"
                },
                "snis": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kong:index/RouteSource:RouteSource"
                    }
                },
                "stripPath": {
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "protocols",
                "serviceId"
            ],
            "inputProperties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kong:index/RouteDestination:RouteDestination"
                    }
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "preserveHost": {
                    "type": "boolean"
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "regexPriority": {
                    "type": "integer"
                },
                "serviceId": {
                    "type": "string"
                },
                "snis": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kong:index/RouteSource:RouteSource"
                    }
                },
                "stripPath": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "protocols",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Route resources.\n",
                "properties": {
                    "destinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kong:index/RouteDestination:RouteDestination"
                        }
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preserveHost": {
                        "type": "boolean"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "regexPriority": {
                        "type": "integer"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "snis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/kong:index/RouteSource:RouteSource"
                        }
                    },
                    "stripPath": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/service:Service": {
            "properties": {
                "connectTimeout": {
                    "type": "integer"
                },
                "host": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "readTimeout": {
                    "type": "integer"
                },
                "retries": {
                    "type": "integer"
                },
                "writeTimeout": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "protocol"
            ],
            "inputProperties": {
                "connectTimeout": {
                    "type": "integer"
                },
                "host": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "readTimeout": {
                    "type": "integer"
                },
                "retries": {
                    "type": "integer"
                },
                "writeTimeout": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "connectTimeout": {
                        "type": "integer"
                    },
                    "host": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "readTimeout": {
                        "type": "integer"
                    },
                    "retries": {
                        "type": "integer"
                    },
                    "writeTimeout": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/sni:Sni": {
            "properties": {
                "certificateId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "certificateId",
                "name"
            ],
            "inputProperties": {
                "certificateId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "certificateId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Sni resources.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/target:Target": {
            "properties": {
                "target": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "TargetAddress"
                        }
                    }
                },
                "upstreamId": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "required": [
                "target",
                "upstreamId",
                "weight"
            ],
            "inputProperties": {
                "target": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "TargetAddress"
                        }
                    }
                },
                "upstreamId": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "target",
                "upstreamId",
                "weight"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Target resources.\n",
                "properties": {
                    "target": {
                        "type": "string",
                        "language": {
                            "csharp": {
                                "name": "TargetAddress"
                            }
                        }
                    },
                    "upstreamId": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "kong:index/upstream:Upstream": {
            "properties": {
                "hashFallback": {
                    "type": "string"
                },
                "hashFallbackHeader": {
                    "type": "string"
                },
                "hashOn": {
                    "type": "string"
                },
                "hashOnCookie": {
                    "type": "string"
                },
                "hashOnCookiePath": {
                    "type": "string"
                },
                "hashOnHeader": {
                    "type": "string"
                },
                "healthchecks": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecks:UpstreamHealthchecks"
                },
                "name": {
                    "type": "string"
                },
                "slots": {
                    "type": "integer"
                }
            },
            "required": [
                "healthchecks",
                "name"
            ],
            "inputProperties": {
                "hashFallback": {
                    "type": "string"
                },
                "hashFallbackHeader": {
                    "type": "string"
                },
                "hashOn": {
                    "type": "string"
                },
                "hashOnCookie": {
                    "type": "string"
                },
                "hashOnCookiePath": {
                    "type": "string"
                },
                "hashOnHeader": {
                    "type": "string"
                },
                "healthchecks": {
                    "$ref": "#/types/kong:index/UpstreamHealthchecks:UpstreamHealthchecks"
                },
                "name": {
                    "type": "string"
                },
                "slots": {
                    "type": "integer"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Upstream resources.\n",
                "properties": {
                    "hashFallback": {
                        "type": "string"
                    },
                    "hashFallbackHeader": {
                        "type": "string"
                    },
                    "hashOn": {
                        "type": "string"
                    },
                    "hashOnCookie": {
                        "type": "string"
                    },
                    "hashOnCookiePath": {
                        "type": "string"
                    },
                    "hashOnHeader": {
                        "type": "string"
                    },
                    "healthchecks": {
                        "$ref": "#/types/kong:index/UpstreamHealthchecks:UpstreamHealthchecks"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slots": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "kong": "Kong"
            },
            "packageReferences": {
                "Pulumi": "3.*-*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-kong/sdk/v3/go/kong"
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0-alpha.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Kong resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/kevholditch/terraform-provider-kong)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-kong` repo](https://github.com/pulumi/pulumi-kong/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`kevholditch/terraform-provider-kong` repo](https://github.com/kevholditch/terraform-provider-kong/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/kevholditch/terraform-provider-kong)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-kong` repo](https://github.com/pulumi/pulumi-kong/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`kevholditch/terraform-provider-kong` repo](https://github.com/kevholditch/terraform-provider-kong/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0a1,\u003c4.0.0"
            }
        }
    }
}