// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kong
{
    /// <summary>
    /// ## # kong.Service
    /// 
    /// The service resource maps directly onto the json for the service endpoint in Kong.  For more information on the parameters [see the Kong Service create documentation](https://docs.konghq.com/gateway-oss/2.5.x/admin-api/#service-object).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Kong = Pulumi.Kong;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var service = new Kong.Service("service", new Kong.ServiceArgs
    ///         {
    ///             ConnectTimeout = 1000,
    ///             Host = "test.org",
    ///             Path = "/mypath",
    ///             Port = 8080,
    ///             Protocol = "http",
    ///             ReadTimeout = 3000,
    ///             Retries = 5,
    ///             WriteTimeout = 2000,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ## Argument reference
    /// 
    /// * `name` - (Required) Service name
    /// * `protocol` - (Required) Protocol to use
    /// * `host` - (Optional) Host to map to
    /// * `port` - (Optional, int) Port to map to. Default: 80
    /// * `path` - (Optional) Path to map to
    /// * `retries` - (Optional, int) Number of retries. Default: 5
    /// * `connect_timeout` - (Optional, int) Connection timeout. Default(ms): 60000
    /// * `write_timeout` - (Optional, int) Write timout. Default(ms): 60000
    /// * `read_timeout` - (Optional, int) Read timeout. Default(ms): 60000
    /// * `tags` - (Optional) A list of strings associated with the Service for grouping and filtering.
    /// * `client_certificate` - (Optional) Certificate to be used as client certificate while TLS handshaking to the upstream server.
    /// * `tls_verify` - (Optional) Whether to enable verification of upstream server TLS certificate.
    /// * `tls_verify_depth` - (Optional) Maximum depth of chain while verifying Upstream server’s TLS certificate.
    /// * `ca_certificates` - (Optional) A of CA Certificate IDs (created from the certificate resource). that are used to build the trust store while verifying upstream server’s TLS certificate.
    /// 
    /// ## Import
    /// 
    /// To import a service
    /// 
    /// ```sh
    ///  $ pulumi import kong:index/service:Service &lt;service_identifier&gt; &lt;service_id&gt;
    /// ```
    /// </summary>
    [KongResourceType("kong:index/service:Service")]
    public partial class Service : Pulumi.CustomResource
    {
        [Output("connectTimeout")]
        public Output<int?> ConnectTimeout { get; private set; } = null!;

        [Output("host")]
        public Output<string?> Host { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("path")]
        public Output<string?> Path { get; private set; } = null!;

        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("readTimeout")]
        public Output<int?> ReadTimeout { get; private set; } = null!;

        [Output("retries")]
        public Output<int?> Retries { get; private set; } = null!;

        [Output("writeTimeout")]
        public Output<int?> WriteTimeout { get; private set; } = null!;


        /// <summary>
        /// Create a Service resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Service(string name, ServiceArgs args, CustomResourceOptions? options = null)
            : base("kong:index/service:Service", name, args ?? new ServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Service(string name, Input<string> id, ServiceState? state = null, CustomResourceOptions? options = null)
            : base("kong:index/service:Service", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Service resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Service Get(string name, Input<string> id, ServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new Service(name, id, state, options);
        }
    }

    public sealed class ServiceArgs : Pulumi.ResourceArgs
    {
        [Input("connectTimeout")]
        public Input<int>? ConnectTimeout { get; set; }

        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("readTimeout")]
        public Input<int>? ReadTimeout { get; set; }

        [Input("retries")]
        public Input<int>? Retries { get; set; }

        [Input("writeTimeout")]
        public Input<int>? WriteTimeout { get; set; }

        public ServiceArgs()
        {
        }
    }

    public sealed class ServiceState : Pulumi.ResourceArgs
    {
        [Input("connectTimeout")]
        public Input<int>? ConnectTimeout { get; set; }

        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("readTimeout")]
        public Input<int>? ReadTimeout { get; set; }

        [Input("retries")]
        public Input<int>? Retries { get; set; }

        [Input("writeTimeout")]
        public Input<int>? WriteTimeout { get; set; }

        public ServiceState()
        {
        }
    }
}
