// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;

namespace Pulumi.Kong
{
    public static class Config
    {
        private static readonly Pulumi.Config __config = new Pulumi.Config("kong");

        /// <summary>
        /// An basic auth password for kong admin
        /// </summary>
        public static string? KongAdminPassword { get; set; } = __config.Get("kongAdminPassword") ?? Utilities.GetEnv("KONG_ADMIN_PASSWORD");

        /// <summary>
        /// API key for the kong api (Enterprise Edition)
        /// </summary>
        public static string? KongAdminToken { get; set; } = __config.Get("kongAdminToken") ?? Utilities.GetEnv("KONG_ADMIN_TOKEN");

        /// <summary>
        /// The address of the kong admin url e.g. http://localhost:8001
        /// </summary>
        public static string? KongAdminUri { get; set; } = __config.Get("kongAdminUri") ?? Utilities.GetEnv("KONG_ADMIN_ADDR") ?? "http://localhost:8001";

        /// <summary>
        /// An basic auth user for kong admin
        /// </summary>
        public static string? KongAdminUsername { get; set; } = __config.Get("kongAdminUsername") ?? Utilities.GetEnv("KONG_ADMIN_USERNAME");

        /// <summary>
        /// API key for the kong api (if you have locked it down)
        /// </summary>
        public static string? KongApiKey { get; set; } = __config.Get("kongApiKey") ?? Utilities.GetEnv("KONG_API_KEY");

        /// <summary>
        /// Should plugins `config_json` field strictly match plugin configuration
        /// </summary>
        public static bool? StrictPluginsMatch { get; set; } = __config.GetBoolean("strictPluginsMatch") ?? Utilities.GetEnvBoolean("STRICT_PLUGINS_MATCH");

        /// <summary>
        /// Whether to skip tls verify for https kong api endpoint using self signed or untrusted certs
        /// </summary>
        public static bool? TlsSkipVerify { get; set; } = __config.GetBoolean("tlsSkipVerify") ?? Utilities.GetEnvBoolean("TLS_SKIP_VERIFY") ?? false;

    }
    namespace ConfigTypes
    {
    }
}
