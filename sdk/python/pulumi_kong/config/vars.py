# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

import types

__config__ = pulumi.Config('kong')


class _ExportableConfig(types.ModuleType):
    @property
    def kong_admin_password(self) -> Optional[str]:
        """
        An basic auth password for kong admin
        """
        return __config__.get('kongAdminPassword')

    @property
    def kong_admin_token(self) -> Optional[str]:
        """
        API key for the kong api (Enterprise Edition)
        """
        return __config__.get('kongAdminToken')

    @property
    def kong_admin_uri(self) -> Optional[str]:
        """
        The address of the kong admin url e.g. http://localhost:8001
        """
        return __config__.get('kongAdminUri')

    @property
    def kong_admin_username(self) -> Optional[str]:
        """
        An basic auth user for kong admin
        """
        return __config__.get('kongAdminUsername')

    @property
    def kong_api_key(self) -> Optional[str]:
        """
        API key for the kong api (if you have locked it down)
        """
        return __config__.get('kongApiKey')

    @property
    def kong_workspace(self) -> Optional[str]:
        """
        Workspace context (Enterprise Edition)
        """
        return __config__.get('kongWorkspace')

    @property
    def strict_plugins_match(self) -> Optional[bool]:
        """
        Should plugins `config_json` field strictly match plugin configuration
        """
        return __config__.get_bool('strictPluginsMatch') or _utilities.get_env_bool('STRICT_PLUGINS_MATCH')

    @property
    def tls_skip_verify(self) -> bool:
        """
        Whether to skip tls verify for https kong api endpoint using self signed or untrusted certs
        """
        return __config__.get_bool('tlsSkipVerify') or (_utilities.get_env_bool('TLS_SKIP_VERIFY') or False)

