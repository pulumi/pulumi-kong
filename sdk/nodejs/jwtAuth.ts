// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class JwtAuth extends pulumi.CustomResource {
    /**
     * Get an existing JwtAuth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JwtAuthState, opts?: pulumi.CustomResourceOptions): JwtAuth {
        return new JwtAuth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kong:index/jwtAuth:JwtAuth';

    /**
     * Returns true if the given object is an instance of JwtAuth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JwtAuth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JwtAuth.__pulumiType;
    }

    public readonly algorithm!: pulumi.Output<string | undefined>;
    public readonly consumerId!: pulumi.Output<string>;
    public readonly key!: pulumi.Output<string | undefined>;
    public readonly rsaPublicKey!: pulumi.Output<string>;
    public readonly secret!: pulumi.Output<string | undefined>;

    /**
     * Create a JwtAuth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JwtAuthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JwtAuthArgs | JwtAuthState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JwtAuthState | undefined;
            inputs["algorithm"] = state ? state.algorithm : undefined;
            inputs["consumerId"] = state ? state.consumerId : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["rsaPublicKey"] = state ? state.rsaPublicKey : undefined;
            inputs["secret"] = state ? state.secret : undefined;
        } else {
            const args = argsOrState as JwtAuthArgs | undefined;
            if ((!args || args.consumerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumerId'");
            }
            if ((!args || args.rsaPublicKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rsaPublicKey'");
            }
            inputs["algorithm"] = args ? args.algorithm : undefined;
            inputs["consumerId"] = args ? args.consumerId : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["rsaPublicKey"] = args ? args.rsaPublicKey : undefined;
            inputs["secret"] = args ? args.secret : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(JwtAuth.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering JwtAuth resources.
 */
export interface JwtAuthState {
    readonly algorithm?: pulumi.Input<string>;
    readonly consumerId?: pulumi.Input<string>;
    readonly key?: pulumi.Input<string>;
    readonly rsaPublicKey?: pulumi.Input<string>;
    readonly secret?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a JwtAuth resource.
 */
export interface JwtAuthArgs {
    readonly algorithm?: pulumi.Input<string>;
    readonly consumerId: pulumi.Input<string>;
    readonly key?: pulumi.Input<string>;
    readonly rsaPublicKey: pulumi.Input<string>;
    readonly secret?: pulumi.Input<string>;
}
