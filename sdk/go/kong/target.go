// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kong

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Target struct {
	pulumi.CustomResourceState

	Target     pulumi.StringOutput `pulumi:"target"`
	UpstreamId pulumi.StringOutput `pulumi:"upstreamId"`
	Weight     pulumi.IntOutput    `pulumi:"weight"`
}

// NewTarget registers a new resource with the given unique name, arguments, and options.
func NewTarget(ctx *pulumi.Context,
	name string, args *TargetArgs, opts ...pulumi.ResourceOption) (*Target, error) {
	if args == nil || args.Target == nil {
		return nil, errors.New("missing required argument 'Target'")
	}
	if args == nil || args.UpstreamId == nil {
		return nil, errors.New("missing required argument 'UpstreamId'")
	}
	if args == nil || args.Weight == nil {
		return nil, errors.New("missing required argument 'Weight'")
	}
	if args == nil {
		args = &TargetArgs{}
	}
	var resource Target
	err := ctx.RegisterResource("kong:index/target:Target", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTarget gets an existing Target resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetState, opts ...pulumi.ResourceOption) (*Target, error) {
	var resource Target
	err := ctx.ReadResource("kong:index/target:Target", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Target resources.
type targetState struct {
	Target     *string `pulumi:"target"`
	UpstreamId *string `pulumi:"upstreamId"`
	Weight     *int    `pulumi:"weight"`
}

type TargetState struct {
	Target     pulumi.StringPtrInput
	UpstreamId pulumi.StringPtrInput
	Weight     pulumi.IntPtrInput
}

func (TargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetState)(nil)).Elem()
}

type targetArgs struct {
	Target     string `pulumi:"target"`
	UpstreamId string `pulumi:"upstreamId"`
	Weight     int    `pulumi:"weight"`
}

// The set of arguments for constructing a Target resource.
type TargetArgs struct {
	Target     pulumi.StringInput
	UpstreamId pulumi.StringInput
	Weight     pulumi.IntInput
}

func (TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetArgs)(nil)).Elem()
}
