// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kong

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Target struct {
	s *pulumi.ResourceState
}

// NewTarget registers a new resource with the given unique name, arguments, and options.
func NewTarget(ctx *pulumi.Context,
	name string, args *TargetArgs, opts ...pulumi.ResourceOpt) (*Target, error) {
	if args == nil || args.Target == nil {
		return nil, errors.New("missing required argument 'Target'")
	}
	if args == nil || args.UpstreamId == nil {
		return nil, errors.New("missing required argument 'UpstreamId'")
	}
	if args == nil || args.Weight == nil {
		return nil, errors.New("missing required argument 'Weight'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["target"] = nil
		inputs["upstreamId"] = nil
		inputs["weight"] = nil
	} else {
		inputs["target"] = args.Target
		inputs["upstreamId"] = args.UpstreamId
		inputs["weight"] = args.Weight
	}
	s, err := ctx.RegisterResource("kong:index/target:Target", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Target{s: s}, nil
}

// GetTarget gets an existing Target resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTarget(ctx *pulumi.Context,
	name string, id pulumi.ID, state *TargetState, opts ...pulumi.ResourceOpt) (*Target, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["target"] = state.Target
		inputs["upstreamId"] = state.UpstreamId
		inputs["weight"] = state.Weight
	}
	s, err := ctx.ReadResource("kong:index/target:Target", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Target{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Target) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Target) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *Target) Target() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["target"])
}

func (r *Target) UpstreamId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["upstreamId"])
}

func (r *Target) Weight() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["weight"])
}

// Input properties used for looking up and filtering Target resources.
type TargetState struct {
	Target interface{}
	UpstreamId interface{}
	Weight interface{}
}

// The set of arguments for constructing a Target resource.
type TargetArgs struct {
	Target interface{}
	UpstreamId interface{}
	Weight interface{}
}
