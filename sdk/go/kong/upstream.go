// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kong

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Upstream struct {
	pulumi.CustomResourceState

	HashFallback       pulumi.StringPtrOutput     `pulumi:"hashFallback"`
	HashFallbackHeader pulumi.StringPtrOutput     `pulumi:"hashFallbackHeader"`
	HashOn             pulumi.StringPtrOutput     `pulumi:"hashOn"`
	HashOnCookie       pulumi.StringPtrOutput     `pulumi:"hashOnCookie"`
	HashOnCookiePath   pulumi.StringPtrOutput     `pulumi:"hashOnCookiePath"`
	HashOnHeader       pulumi.StringPtrOutput     `pulumi:"hashOnHeader"`
	Healthchecks       UpstreamHealthchecksOutput `pulumi:"healthchecks"`
	Name               pulumi.StringOutput        `pulumi:"name"`
	Slots              pulumi.IntPtrOutput        `pulumi:"slots"`
}

// NewUpstream registers a new resource with the given unique name, arguments, and options.
func NewUpstream(ctx *pulumi.Context,
	name string, args *UpstreamArgs, opts ...pulumi.ResourceOption) (*Upstream, error) {
	if args == nil {
		args = &UpstreamArgs{}
	}

	var resource Upstream
	err := ctx.RegisterResource("kong:index/upstream:Upstream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUpstream gets an existing Upstream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUpstream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UpstreamState, opts ...pulumi.ResourceOption) (*Upstream, error) {
	var resource Upstream
	err := ctx.ReadResource("kong:index/upstream:Upstream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Upstream resources.
type upstreamState struct {
	HashFallback       *string               `pulumi:"hashFallback"`
	HashFallbackHeader *string               `pulumi:"hashFallbackHeader"`
	HashOn             *string               `pulumi:"hashOn"`
	HashOnCookie       *string               `pulumi:"hashOnCookie"`
	HashOnCookiePath   *string               `pulumi:"hashOnCookiePath"`
	HashOnHeader       *string               `pulumi:"hashOnHeader"`
	Healthchecks       *UpstreamHealthchecks `pulumi:"healthchecks"`
	Name               *string               `pulumi:"name"`
	Slots              *int                  `pulumi:"slots"`
}

type UpstreamState struct {
	HashFallback       pulumi.StringPtrInput
	HashFallbackHeader pulumi.StringPtrInput
	HashOn             pulumi.StringPtrInput
	HashOnCookie       pulumi.StringPtrInput
	HashOnCookiePath   pulumi.StringPtrInput
	HashOnHeader       pulumi.StringPtrInput
	Healthchecks       UpstreamHealthchecksPtrInput
	Name               pulumi.StringPtrInput
	Slots              pulumi.IntPtrInput
}

func (UpstreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*upstreamState)(nil)).Elem()
}

type upstreamArgs struct {
	HashFallback       *string               `pulumi:"hashFallback"`
	HashFallbackHeader *string               `pulumi:"hashFallbackHeader"`
	HashOn             *string               `pulumi:"hashOn"`
	HashOnCookie       *string               `pulumi:"hashOnCookie"`
	HashOnCookiePath   *string               `pulumi:"hashOnCookiePath"`
	HashOnHeader       *string               `pulumi:"hashOnHeader"`
	Healthchecks       *UpstreamHealthchecks `pulumi:"healthchecks"`
	Name               *string               `pulumi:"name"`
	Slots              *int                  `pulumi:"slots"`
}

// The set of arguments for constructing a Upstream resource.
type UpstreamArgs struct {
	HashFallback       pulumi.StringPtrInput
	HashFallbackHeader pulumi.StringPtrInput
	HashOn             pulumi.StringPtrInput
	HashOnCookie       pulumi.StringPtrInput
	HashOnCookiePath   pulumi.StringPtrInput
	HashOnHeader       pulumi.StringPtrInput
	Healthchecks       UpstreamHealthchecksPtrInput
	Name               pulumi.StringPtrInput
	Slots              pulumi.IntPtrInput
}

func (UpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*upstreamArgs)(nil)).Elem()
}

type UpstreamInput interface {
	pulumi.Input

	ToUpstreamOutput() UpstreamOutput
	ToUpstreamOutputWithContext(ctx context.Context) UpstreamOutput
}

func (Upstream) ElementType() reflect.Type {
	return reflect.TypeOf((*Upstream)(nil)).Elem()
}

func (i Upstream) ToUpstreamOutput() UpstreamOutput {
	return i.ToUpstreamOutputWithContext(context.Background())
}

func (i Upstream) ToUpstreamOutputWithContext(ctx context.Context) UpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamOutput)
}

type UpstreamOutput struct {
	*pulumi.OutputState
}

func (UpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamOutput)(nil)).Elem()
}

func (o UpstreamOutput) ToUpstreamOutput() UpstreamOutput {
	return o
}

func (o UpstreamOutput) ToUpstreamOutputWithContext(ctx context.Context) UpstreamOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(UpstreamOutput{})
}
