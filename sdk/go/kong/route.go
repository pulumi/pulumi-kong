// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kong

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Route struct {
	s *pulumi.ResourceState
}

// NewRoute registers a new resource with the given unique name, arguments, and options.
func NewRoute(ctx *pulumi.Context,
	name string, args *RouteArgs, opts ...pulumi.ResourceOpt) (*Route, error) {
	if args == nil || args.Protocols == nil {
		return nil, errors.New("missing required argument 'Protocols'")
	}
	if args == nil || args.ServiceId == nil {
		return nil, errors.New("missing required argument 'ServiceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["destinations"] = nil
		inputs["hosts"] = nil
		inputs["methods"] = nil
		inputs["name"] = nil
		inputs["paths"] = nil
		inputs["preserveHost"] = nil
		inputs["protocols"] = nil
		inputs["regexPriority"] = nil
		inputs["serviceId"] = nil
		inputs["snis"] = nil
		inputs["sources"] = nil
		inputs["stripPath"] = nil
	} else {
		inputs["destinations"] = args.Destinations
		inputs["hosts"] = args.Hosts
		inputs["methods"] = args.Methods
		inputs["name"] = args.Name
		inputs["paths"] = args.Paths
		inputs["preserveHost"] = args.PreserveHost
		inputs["protocols"] = args.Protocols
		inputs["regexPriority"] = args.RegexPriority
		inputs["serviceId"] = args.ServiceId
		inputs["snis"] = args.Snis
		inputs["sources"] = args.Sources
		inputs["stripPath"] = args.StripPath
	}
	s, err := ctx.RegisterResource("kong:index/route:Route", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Route{s: s}, nil
}

// GetRoute gets an existing Route resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoute(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RouteState, opts ...pulumi.ResourceOpt) (*Route, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["destinations"] = state.Destinations
		inputs["hosts"] = state.Hosts
		inputs["methods"] = state.Methods
		inputs["name"] = state.Name
		inputs["paths"] = state.Paths
		inputs["preserveHost"] = state.PreserveHost
		inputs["protocols"] = state.Protocols
		inputs["regexPriority"] = state.RegexPriority
		inputs["serviceId"] = state.ServiceId
		inputs["snis"] = state.Snis
		inputs["sources"] = state.Sources
		inputs["stripPath"] = state.StripPath
	}
	s, err := ctx.ReadResource("kong:index/route:Route", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Route{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Route) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Route) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *Route) Destinations() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["destinations"])
}

func (r *Route) Hosts() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["hosts"])
}

func (r *Route) Methods() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["methods"])
}

func (r *Route) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

func (r *Route) Paths() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["paths"])
}

func (r *Route) PreserveHost() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["preserveHost"])
}

func (r *Route) Protocols() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["protocols"])
}

func (r *Route) RegexPriority() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["regexPriority"])
}

func (r *Route) ServiceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["serviceId"])
}

func (r *Route) Snis() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["snis"])
}

func (r *Route) Sources() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["sources"])
}

func (r *Route) StripPath() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["stripPath"])
}

// Input properties used for looking up and filtering Route resources.
type RouteState struct {
	Destinations interface{}
	Hosts interface{}
	Methods interface{}
	Name interface{}
	Paths interface{}
	PreserveHost interface{}
	Protocols interface{}
	RegexPriority interface{}
	ServiceId interface{}
	Snis interface{}
	Sources interface{}
	StripPath interface{}
}

// The set of arguments for constructing a Route resource.
type RouteArgs struct {
	Destinations interface{}
	Hosts interface{}
	Methods interface{}
	Name interface{}
	Paths interface{}
	PreserveHost interface{}
	Protocols interface{}
	RegexPriority interface{}
	ServiceId interface{}
	Snis interface{}
	Sources interface{}
	StripPath interface{}
}
