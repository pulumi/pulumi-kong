// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kong

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type JwtAuth struct {
	pulumi.CustomResourceState

	Algorithm    pulumi.StringPtrOutput `pulumi:"algorithm"`
	ConsumerId   pulumi.StringOutput    `pulumi:"consumerId"`
	Key          pulumi.StringPtrOutput `pulumi:"key"`
	RsaPublicKey pulumi.StringOutput    `pulumi:"rsaPublicKey"`
	Secret       pulumi.StringPtrOutput `pulumi:"secret"`
}

// NewJwtAuth registers a new resource with the given unique name, arguments, and options.
func NewJwtAuth(ctx *pulumi.Context,
	name string, args *JwtAuthArgs, opts ...pulumi.ResourceOption) (*JwtAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsumerId == nil {
		return nil, errors.New("invalid value for required argument 'ConsumerId'")
	}
	if args.RsaPublicKey == nil {
		return nil, errors.New("invalid value for required argument 'RsaPublicKey'")
	}
	var resource JwtAuth
	err := ctx.RegisterResource("kong:index/jwtAuth:JwtAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJwtAuth gets an existing JwtAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJwtAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JwtAuthState, opts ...pulumi.ResourceOption) (*JwtAuth, error) {
	var resource JwtAuth
	err := ctx.ReadResource("kong:index/jwtAuth:JwtAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JwtAuth resources.
type jwtAuthState struct {
	Algorithm    *string `pulumi:"algorithm"`
	ConsumerId   *string `pulumi:"consumerId"`
	Key          *string `pulumi:"key"`
	RsaPublicKey *string `pulumi:"rsaPublicKey"`
	Secret       *string `pulumi:"secret"`
}

type JwtAuthState struct {
	Algorithm    pulumi.StringPtrInput
	ConsumerId   pulumi.StringPtrInput
	Key          pulumi.StringPtrInput
	RsaPublicKey pulumi.StringPtrInput
	Secret       pulumi.StringPtrInput
}

func (JwtAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*jwtAuthState)(nil)).Elem()
}

type jwtAuthArgs struct {
	Algorithm    *string `pulumi:"algorithm"`
	ConsumerId   string  `pulumi:"consumerId"`
	Key          *string `pulumi:"key"`
	RsaPublicKey string  `pulumi:"rsaPublicKey"`
	Secret       *string `pulumi:"secret"`
}

// The set of arguments for constructing a JwtAuth resource.
type JwtAuthArgs struct {
	Algorithm    pulumi.StringPtrInput
	ConsumerId   pulumi.StringInput
	Key          pulumi.StringPtrInput
	RsaPublicKey pulumi.StringInput
	Secret       pulumi.StringPtrInput
}

func (JwtAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jwtAuthArgs)(nil)).Elem()
}

type JwtAuthInput interface {
	pulumi.Input

	ToJwtAuthOutput() JwtAuthOutput
	ToJwtAuthOutputWithContext(ctx context.Context) JwtAuthOutput
}

func (*JwtAuth) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuth)(nil))
}

func (i *JwtAuth) ToJwtAuthOutput() JwtAuthOutput {
	return i.ToJwtAuthOutputWithContext(context.Background())
}

func (i *JwtAuth) ToJwtAuthOutputWithContext(ctx context.Context) JwtAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthOutput)
}

func (i *JwtAuth) ToJwtAuthPtrOutput() JwtAuthPtrOutput {
	return i.ToJwtAuthPtrOutputWithContext(context.Background())
}

func (i *JwtAuth) ToJwtAuthPtrOutputWithContext(ctx context.Context) JwtAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthPtrOutput)
}

type JwtAuthPtrInput interface {
	pulumi.Input

	ToJwtAuthPtrOutput() JwtAuthPtrOutput
	ToJwtAuthPtrOutputWithContext(ctx context.Context) JwtAuthPtrOutput
}

type jwtAuthPtrType JwtAuthArgs

func (*jwtAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtAuth)(nil))
}

func (i *jwtAuthPtrType) ToJwtAuthPtrOutput() JwtAuthPtrOutput {
	return i.ToJwtAuthPtrOutputWithContext(context.Background())
}

func (i *jwtAuthPtrType) ToJwtAuthPtrOutputWithContext(ctx context.Context) JwtAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthPtrOutput)
}

// JwtAuthArrayInput is an input type that accepts JwtAuthArray and JwtAuthArrayOutput values.
// You can construct a concrete instance of `JwtAuthArrayInput` via:
//
//          JwtAuthArray{ JwtAuthArgs{...} }
type JwtAuthArrayInput interface {
	pulumi.Input

	ToJwtAuthArrayOutput() JwtAuthArrayOutput
	ToJwtAuthArrayOutputWithContext(context.Context) JwtAuthArrayOutput
}

type JwtAuthArray []JwtAuthInput

func (JwtAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*JwtAuth)(nil))
}

func (i JwtAuthArray) ToJwtAuthArrayOutput() JwtAuthArrayOutput {
	return i.ToJwtAuthArrayOutputWithContext(context.Background())
}

func (i JwtAuthArray) ToJwtAuthArrayOutputWithContext(ctx context.Context) JwtAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthArrayOutput)
}

// JwtAuthMapInput is an input type that accepts JwtAuthMap and JwtAuthMapOutput values.
// You can construct a concrete instance of `JwtAuthMapInput` via:
//
//          JwtAuthMap{ "key": JwtAuthArgs{...} }
type JwtAuthMapInput interface {
	pulumi.Input

	ToJwtAuthMapOutput() JwtAuthMapOutput
	ToJwtAuthMapOutputWithContext(context.Context) JwtAuthMapOutput
}

type JwtAuthMap map[string]JwtAuthInput

func (JwtAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*JwtAuth)(nil))
}

func (i JwtAuthMap) ToJwtAuthMapOutput() JwtAuthMapOutput {
	return i.ToJwtAuthMapOutputWithContext(context.Background())
}

func (i JwtAuthMap) ToJwtAuthMapOutputWithContext(ctx context.Context) JwtAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtAuthMapOutput)
}

type JwtAuthOutput struct {
	*pulumi.OutputState
}

func (JwtAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtAuth)(nil))
}

func (o JwtAuthOutput) ToJwtAuthOutput() JwtAuthOutput {
	return o
}

func (o JwtAuthOutput) ToJwtAuthOutputWithContext(ctx context.Context) JwtAuthOutput {
	return o
}

func (o JwtAuthOutput) ToJwtAuthPtrOutput() JwtAuthPtrOutput {
	return o.ToJwtAuthPtrOutputWithContext(context.Background())
}

func (o JwtAuthOutput) ToJwtAuthPtrOutputWithContext(ctx context.Context) JwtAuthPtrOutput {
	return o.ApplyT(func(v JwtAuth) *JwtAuth {
		return &v
	}).(JwtAuthPtrOutput)
}

type JwtAuthPtrOutput struct {
	*pulumi.OutputState
}

func (JwtAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtAuth)(nil))
}

func (o JwtAuthPtrOutput) ToJwtAuthPtrOutput() JwtAuthPtrOutput {
	return o
}

func (o JwtAuthPtrOutput) ToJwtAuthPtrOutputWithContext(ctx context.Context) JwtAuthPtrOutput {
	return o
}

type JwtAuthArrayOutput struct{ *pulumi.OutputState }

func (JwtAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JwtAuth)(nil))
}

func (o JwtAuthArrayOutput) ToJwtAuthArrayOutput() JwtAuthArrayOutput {
	return o
}

func (o JwtAuthArrayOutput) ToJwtAuthArrayOutputWithContext(ctx context.Context) JwtAuthArrayOutput {
	return o
}

func (o JwtAuthArrayOutput) Index(i pulumi.IntInput) JwtAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JwtAuth {
		return vs[0].([]JwtAuth)[vs[1].(int)]
	}).(JwtAuthOutput)
}

type JwtAuthMapOutput struct{ *pulumi.OutputState }

func (JwtAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]JwtAuth)(nil))
}

func (o JwtAuthMapOutput) ToJwtAuthMapOutput() JwtAuthMapOutput {
	return o
}

func (o JwtAuthMapOutput) ToJwtAuthMapOutputWithContext(ctx context.Context) JwtAuthMapOutput {
	return o
}

func (o JwtAuthMapOutput) MapIndex(k pulumi.StringInput) JwtAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) JwtAuth {
		return vs[0].(map[string]JwtAuth)[vs[1].(string)]
	}).(JwtAuthOutput)
}

func init() {
	pulumi.RegisterOutputType(JwtAuthOutput{})
	pulumi.RegisterOutputType(JwtAuthPtrOutput{})
	pulumi.RegisterOutputType(JwtAuthArrayOutput{})
	pulumi.RegisterOutputType(JwtAuthMapOutput{})
}
