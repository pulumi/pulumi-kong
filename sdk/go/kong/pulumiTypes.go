// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kong

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-kong/sdk/v4/go/kong/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type RouteDestination struct {
	Ip   *string `pulumi:"ip"`
	Port *int    `pulumi:"port"`
}

// RouteDestinationInput is an input type that accepts RouteDestinationArgs and RouteDestinationOutput values.
// You can construct a concrete instance of `RouteDestinationInput` via:
//
//	RouteDestinationArgs{...}
type RouteDestinationInput interface {
	pulumi.Input

	ToRouteDestinationOutput() RouteDestinationOutput
	ToRouteDestinationOutputWithContext(context.Context) RouteDestinationOutput
}

type RouteDestinationArgs struct {
	Ip   pulumi.StringPtrInput `pulumi:"ip"`
	Port pulumi.IntPtrInput    `pulumi:"port"`
}

func (RouteDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteDestination)(nil)).Elem()
}

func (i RouteDestinationArgs) ToRouteDestinationOutput() RouteDestinationOutput {
	return i.ToRouteDestinationOutputWithContext(context.Background())
}

func (i RouteDestinationArgs) ToRouteDestinationOutputWithContext(ctx context.Context) RouteDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteDestinationOutput)
}

// RouteDestinationArrayInput is an input type that accepts RouteDestinationArray and RouteDestinationArrayOutput values.
// You can construct a concrete instance of `RouteDestinationArrayInput` via:
//
//	RouteDestinationArray{ RouteDestinationArgs{...} }
type RouteDestinationArrayInput interface {
	pulumi.Input

	ToRouteDestinationArrayOutput() RouteDestinationArrayOutput
	ToRouteDestinationArrayOutputWithContext(context.Context) RouteDestinationArrayOutput
}

type RouteDestinationArray []RouteDestinationInput

func (RouteDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteDestination)(nil)).Elem()
}

func (i RouteDestinationArray) ToRouteDestinationArrayOutput() RouteDestinationArrayOutput {
	return i.ToRouteDestinationArrayOutputWithContext(context.Background())
}

func (i RouteDestinationArray) ToRouteDestinationArrayOutputWithContext(ctx context.Context) RouteDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteDestinationArrayOutput)
}

type RouteDestinationOutput struct{ *pulumi.OutputState }

func (RouteDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteDestination)(nil)).Elem()
}

func (o RouteDestinationOutput) ToRouteDestinationOutput() RouteDestinationOutput {
	return o
}

func (o RouteDestinationOutput) ToRouteDestinationOutputWithContext(ctx context.Context) RouteDestinationOutput {
	return o
}

func (o RouteDestinationOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteDestination) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o RouteDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type RouteDestinationArrayOutput struct{ *pulumi.OutputState }

func (RouteDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteDestination)(nil)).Elem()
}

func (o RouteDestinationArrayOutput) ToRouteDestinationArrayOutput() RouteDestinationArrayOutput {
	return o
}

func (o RouteDestinationArrayOutput) ToRouteDestinationArrayOutputWithContext(ctx context.Context) RouteDestinationArrayOutput {
	return o
}

func (o RouteDestinationArrayOutput) Index(i pulumi.IntInput) RouteDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteDestination {
		return vs[0].([]RouteDestination)[vs[1].(int)]
	}).(RouteDestinationOutput)
}

type RouteHeader struct {
	// The name of the route
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// RouteHeaderInput is an input type that accepts RouteHeaderArgs and RouteHeaderOutput values.
// You can construct a concrete instance of `RouteHeaderInput` via:
//
//	RouteHeaderArgs{...}
type RouteHeaderInput interface {
	pulumi.Input

	ToRouteHeaderOutput() RouteHeaderOutput
	ToRouteHeaderOutputWithContext(context.Context) RouteHeaderOutput
}

type RouteHeaderArgs struct {
	// The name of the route
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RouteHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHeader)(nil)).Elem()
}

func (i RouteHeaderArgs) ToRouteHeaderOutput() RouteHeaderOutput {
	return i.ToRouteHeaderOutputWithContext(context.Background())
}

func (i RouteHeaderArgs) ToRouteHeaderOutputWithContext(ctx context.Context) RouteHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHeaderOutput)
}

// RouteHeaderArrayInput is an input type that accepts RouteHeaderArray and RouteHeaderArrayOutput values.
// You can construct a concrete instance of `RouteHeaderArrayInput` via:
//
//	RouteHeaderArray{ RouteHeaderArgs{...} }
type RouteHeaderArrayInput interface {
	pulumi.Input

	ToRouteHeaderArrayOutput() RouteHeaderArrayOutput
	ToRouteHeaderArrayOutputWithContext(context.Context) RouteHeaderArrayOutput
}

type RouteHeaderArray []RouteHeaderInput

func (RouteHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteHeader)(nil)).Elem()
}

func (i RouteHeaderArray) ToRouteHeaderArrayOutput() RouteHeaderArrayOutput {
	return i.ToRouteHeaderArrayOutputWithContext(context.Background())
}

func (i RouteHeaderArray) ToRouteHeaderArrayOutputWithContext(ctx context.Context) RouteHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteHeaderArrayOutput)
}

type RouteHeaderOutput struct{ *pulumi.OutputState }

func (RouteHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteHeader)(nil)).Elem()
}

func (o RouteHeaderOutput) ToRouteHeaderOutput() RouteHeaderOutput {
	return o
}

func (o RouteHeaderOutput) ToRouteHeaderOutputWithContext(ctx context.Context) RouteHeaderOutput {
	return o
}

// The name of the route
func (o RouteHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o RouteHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RouteHeaderArrayOutput struct{ *pulumi.OutputState }

func (RouteHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteHeader)(nil)).Elem()
}

func (o RouteHeaderArrayOutput) ToRouteHeaderArrayOutput() RouteHeaderArrayOutput {
	return o
}

func (o RouteHeaderArrayOutput) ToRouteHeaderArrayOutputWithContext(ctx context.Context) RouteHeaderArrayOutput {
	return o
}

func (o RouteHeaderArrayOutput) Index(i pulumi.IntInput) RouteHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteHeader {
		return vs[0].([]RouteHeader)[vs[1].(int)]
	}).(RouteHeaderOutput)
}

type RouteSource struct {
	Ip   *string `pulumi:"ip"`
	Port *int    `pulumi:"port"`
}

// RouteSourceInput is an input type that accepts RouteSourceArgs and RouteSourceOutput values.
// You can construct a concrete instance of `RouteSourceInput` via:
//
//	RouteSourceArgs{...}
type RouteSourceInput interface {
	pulumi.Input

	ToRouteSourceOutput() RouteSourceOutput
	ToRouteSourceOutputWithContext(context.Context) RouteSourceOutput
}

type RouteSourceArgs struct {
	Ip   pulumi.StringPtrInput `pulumi:"ip"`
	Port pulumi.IntPtrInput    `pulumi:"port"`
}

func (RouteSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSource)(nil)).Elem()
}

func (i RouteSourceArgs) ToRouteSourceOutput() RouteSourceOutput {
	return i.ToRouteSourceOutputWithContext(context.Background())
}

func (i RouteSourceArgs) ToRouteSourceOutputWithContext(ctx context.Context) RouteSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSourceOutput)
}

// RouteSourceArrayInput is an input type that accepts RouteSourceArray and RouteSourceArrayOutput values.
// You can construct a concrete instance of `RouteSourceArrayInput` via:
//
//	RouteSourceArray{ RouteSourceArgs{...} }
type RouteSourceArrayInput interface {
	pulumi.Input

	ToRouteSourceArrayOutput() RouteSourceArrayOutput
	ToRouteSourceArrayOutputWithContext(context.Context) RouteSourceArrayOutput
}

type RouteSourceArray []RouteSourceInput

func (RouteSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSource)(nil)).Elem()
}

func (i RouteSourceArray) ToRouteSourceArrayOutput() RouteSourceArrayOutput {
	return i.ToRouteSourceArrayOutputWithContext(context.Background())
}

func (i RouteSourceArray) ToRouteSourceArrayOutputWithContext(ctx context.Context) RouteSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSourceArrayOutput)
}

type RouteSourceOutput struct{ *pulumi.OutputState }

func (RouteSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSource)(nil)).Elem()
}

func (o RouteSourceOutput) ToRouteSourceOutput() RouteSourceOutput {
	return o
}

func (o RouteSourceOutput) ToRouteSourceOutputWithContext(ctx context.Context) RouteSourceOutput {
	return o
}

func (o RouteSourceOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteSource) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o RouteSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RouteSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type RouteSourceArrayOutput struct{ *pulumi.OutputState }

func (RouteSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSource)(nil)).Elem()
}

func (o RouteSourceArrayOutput) ToRouteSourceArrayOutput() RouteSourceArrayOutput {
	return o
}

func (o RouteSourceArrayOutput) ToRouteSourceArrayOutputWithContext(ctx context.Context) RouteSourceArrayOutput {
	return o
}

func (o RouteSourceArrayOutput) Index(i pulumi.IntInput) RouteSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteSource {
		return vs[0].([]RouteSource)[vs[1].(int)]
	}).(RouteSourceOutput)
}

type UpstreamHealthchecks struct {
	Active  *UpstreamHealthchecksActive  `pulumi:"active"`
	Passive *UpstreamHealthchecksPassive `pulumi:"passive"`
}

// UpstreamHealthchecksInput is an input type that accepts UpstreamHealthchecksArgs and UpstreamHealthchecksOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksInput` via:
//
//	UpstreamHealthchecksArgs{...}
type UpstreamHealthchecksInput interface {
	pulumi.Input

	ToUpstreamHealthchecksOutput() UpstreamHealthchecksOutput
	ToUpstreamHealthchecksOutputWithContext(context.Context) UpstreamHealthchecksOutput
}

type UpstreamHealthchecksArgs struct {
	Active  UpstreamHealthchecksActivePtrInput  `pulumi:"active"`
	Passive UpstreamHealthchecksPassivePtrInput `pulumi:"passive"`
}

func (UpstreamHealthchecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecks)(nil)).Elem()
}

func (i UpstreamHealthchecksArgs) ToUpstreamHealthchecksOutput() UpstreamHealthchecksOutput {
	return i.ToUpstreamHealthchecksOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksArgs) ToUpstreamHealthchecksOutputWithContext(ctx context.Context) UpstreamHealthchecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksOutput)
}

func (i UpstreamHealthchecksArgs) ToUpstreamHealthchecksPtrOutput() UpstreamHealthchecksPtrOutput {
	return i.ToUpstreamHealthchecksPtrOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksArgs) ToUpstreamHealthchecksPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksOutput).ToUpstreamHealthchecksPtrOutputWithContext(ctx)
}

// UpstreamHealthchecksPtrInput is an input type that accepts UpstreamHealthchecksArgs, UpstreamHealthchecksPtr and UpstreamHealthchecksPtrOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksPtrInput` via:
//
//	        UpstreamHealthchecksArgs{...}
//
//	or:
//
//	        nil
type UpstreamHealthchecksPtrInput interface {
	pulumi.Input

	ToUpstreamHealthchecksPtrOutput() UpstreamHealthchecksPtrOutput
	ToUpstreamHealthchecksPtrOutputWithContext(context.Context) UpstreamHealthchecksPtrOutput
}

type upstreamHealthchecksPtrType UpstreamHealthchecksArgs

func UpstreamHealthchecksPtr(v *UpstreamHealthchecksArgs) UpstreamHealthchecksPtrInput {
	return (*upstreamHealthchecksPtrType)(v)
}

func (*upstreamHealthchecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecks)(nil)).Elem()
}

func (i *upstreamHealthchecksPtrType) ToUpstreamHealthchecksPtrOutput() UpstreamHealthchecksPtrOutput {
	return i.ToUpstreamHealthchecksPtrOutputWithContext(context.Background())
}

func (i *upstreamHealthchecksPtrType) ToUpstreamHealthchecksPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPtrOutput)
}

type UpstreamHealthchecksOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecks)(nil)).Elem()
}

func (o UpstreamHealthchecksOutput) ToUpstreamHealthchecksOutput() UpstreamHealthchecksOutput {
	return o
}

func (o UpstreamHealthchecksOutput) ToUpstreamHealthchecksOutputWithContext(ctx context.Context) UpstreamHealthchecksOutput {
	return o
}

func (o UpstreamHealthchecksOutput) ToUpstreamHealthchecksPtrOutput() UpstreamHealthchecksPtrOutput {
	return o.ToUpstreamHealthchecksPtrOutputWithContext(context.Background())
}

func (o UpstreamHealthchecksOutput) ToUpstreamHealthchecksPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamHealthchecks) *UpstreamHealthchecks {
		return &v
	}).(UpstreamHealthchecksPtrOutput)
}

func (o UpstreamHealthchecksOutput) Active() UpstreamHealthchecksActivePtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecks) *UpstreamHealthchecksActive { return v.Active }).(UpstreamHealthchecksActivePtrOutput)
}

func (o UpstreamHealthchecksOutput) Passive() UpstreamHealthchecksPassivePtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecks) *UpstreamHealthchecksPassive { return v.Passive }).(UpstreamHealthchecksPassivePtrOutput)
}

type UpstreamHealthchecksPtrOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecks)(nil)).Elem()
}

func (o UpstreamHealthchecksPtrOutput) ToUpstreamHealthchecksPtrOutput() UpstreamHealthchecksPtrOutput {
	return o
}

func (o UpstreamHealthchecksPtrOutput) ToUpstreamHealthchecksPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPtrOutput {
	return o
}

func (o UpstreamHealthchecksPtrOutput) Elem() UpstreamHealthchecksOutput {
	return o.ApplyT(func(v *UpstreamHealthchecks) UpstreamHealthchecks {
		if v != nil {
			return *v
		}
		var ret UpstreamHealthchecks
		return ret
	}).(UpstreamHealthchecksOutput)
}

func (o UpstreamHealthchecksPtrOutput) Active() UpstreamHealthchecksActivePtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecks) *UpstreamHealthchecksActive {
		if v == nil {
			return nil
		}
		return v.Active
	}).(UpstreamHealthchecksActivePtrOutput)
}

func (o UpstreamHealthchecksPtrOutput) Passive() UpstreamHealthchecksPassivePtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecks) *UpstreamHealthchecksPassive {
		if v == nil {
			return nil
		}
		return v.Passive
	}).(UpstreamHealthchecksPassivePtrOutput)
}

type UpstreamHealthchecksActive struct {
	Concurrency            *int                                 `pulumi:"concurrency"`
	Healthy                *UpstreamHealthchecksActiveHealthy   `pulumi:"healthy"`
	HttpPath               *string                              `pulumi:"httpPath"`
	HttpsSni               *string                              `pulumi:"httpsSni"`
	HttpsVerifyCertificate *bool                                `pulumi:"httpsVerifyCertificate"`
	Timeout                *int                                 `pulumi:"timeout"`
	Type                   *string                              `pulumi:"type"`
	Unhealthy              *UpstreamHealthchecksActiveUnhealthy `pulumi:"unhealthy"`
}

// UpstreamHealthchecksActiveInput is an input type that accepts UpstreamHealthchecksActiveArgs and UpstreamHealthchecksActiveOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksActiveInput` via:
//
//	UpstreamHealthchecksActiveArgs{...}
type UpstreamHealthchecksActiveInput interface {
	pulumi.Input

	ToUpstreamHealthchecksActiveOutput() UpstreamHealthchecksActiveOutput
	ToUpstreamHealthchecksActiveOutputWithContext(context.Context) UpstreamHealthchecksActiveOutput
}

type UpstreamHealthchecksActiveArgs struct {
	Concurrency            pulumi.IntPtrInput                          `pulumi:"concurrency"`
	Healthy                UpstreamHealthchecksActiveHealthyPtrInput   `pulumi:"healthy"`
	HttpPath               pulumi.StringPtrInput                       `pulumi:"httpPath"`
	HttpsSni               pulumi.StringPtrInput                       `pulumi:"httpsSni"`
	HttpsVerifyCertificate pulumi.BoolPtrInput                         `pulumi:"httpsVerifyCertificate"`
	Timeout                pulumi.IntPtrInput                          `pulumi:"timeout"`
	Type                   pulumi.StringPtrInput                       `pulumi:"type"`
	Unhealthy              UpstreamHealthchecksActiveUnhealthyPtrInput `pulumi:"unhealthy"`
}

func (UpstreamHealthchecksActiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksActive)(nil)).Elem()
}

func (i UpstreamHealthchecksActiveArgs) ToUpstreamHealthchecksActiveOutput() UpstreamHealthchecksActiveOutput {
	return i.ToUpstreamHealthchecksActiveOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksActiveArgs) ToUpstreamHealthchecksActiveOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveOutput)
}

func (i UpstreamHealthchecksActiveArgs) ToUpstreamHealthchecksActivePtrOutput() UpstreamHealthchecksActivePtrOutput {
	return i.ToUpstreamHealthchecksActivePtrOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksActiveArgs) ToUpstreamHealthchecksActivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveOutput).ToUpstreamHealthchecksActivePtrOutputWithContext(ctx)
}

// UpstreamHealthchecksActivePtrInput is an input type that accepts UpstreamHealthchecksActiveArgs, UpstreamHealthchecksActivePtr and UpstreamHealthchecksActivePtrOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksActivePtrInput` via:
//
//	        UpstreamHealthchecksActiveArgs{...}
//
//	or:
//
//	        nil
type UpstreamHealthchecksActivePtrInput interface {
	pulumi.Input

	ToUpstreamHealthchecksActivePtrOutput() UpstreamHealthchecksActivePtrOutput
	ToUpstreamHealthchecksActivePtrOutputWithContext(context.Context) UpstreamHealthchecksActivePtrOutput
}

type upstreamHealthchecksActivePtrType UpstreamHealthchecksActiveArgs

func UpstreamHealthchecksActivePtr(v *UpstreamHealthchecksActiveArgs) UpstreamHealthchecksActivePtrInput {
	return (*upstreamHealthchecksActivePtrType)(v)
}

func (*upstreamHealthchecksActivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksActive)(nil)).Elem()
}

func (i *upstreamHealthchecksActivePtrType) ToUpstreamHealthchecksActivePtrOutput() UpstreamHealthchecksActivePtrOutput {
	return i.ToUpstreamHealthchecksActivePtrOutputWithContext(context.Background())
}

func (i *upstreamHealthchecksActivePtrType) ToUpstreamHealthchecksActivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActivePtrOutput)
}

type UpstreamHealthchecksActiveOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksActiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksActive)(nil)).Elem()
}

func (o UpstreamHealthchecksActiveOutput) ToUpstreamHealthchecksActiveOutput() UpstreamHealthchecksActiveOutput {
	return o
}

func (o UpstreamHealthchecksActiveOutput) ToUpstreamHealthchecksActiveOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveOutput {
	return o
}

func (o UpstreamHealthchecksActiveOutput) ToUpstreamHealthchecksActivePtrOutput() UpstreamHealthchecksActivePtrOutput {
	return o.ToUpstreamHealthchecksActivePtrOutputWithContext(context.Background())
}

func (o UpstreamHealthchecksActiveOutput) ToUpstreamHealthchecksActivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamHealthchecksActive) *UpstreamHealthchecksActive {
		return &v
	}).(UpstreamHealthchecksActivePtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *int { return v.Concurrency }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) Healthy() UpstreamHealthchecksActiveHealthyPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *UpstreamHealthchecksActiveHealthy { return v.Healthy }).(UpstreamHealthchecksActiveHealthyPtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *string { return v.HttpPath }).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) HttpsSni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *string { return v.HttpsSni }).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) HttpsVerifyCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *bool { return v.HttpsVerifyCertificate }).(pulumi.BoolPtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksActiveOutput) Unhealthy() UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActive) *UpstreamHealthchecksActiveUnhealthy { return v.Unhealthy }).(UpstreamHealthchecksActiveUnhealthyPtrOutput)
}

type UpstreamHealthchecksActivePtrOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksActivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksActive)(nil)).Elem()
}

func (o UpstreamHealthchecksActivePtrOutput) ToUpstreamHealthchecksActivePtrOutput() UpstreamHealthchecksActivePtrOutput {
	return o
}

func (o UpstreamHealthchecksActivePtrOutput) ToUpstreamHealthchecksActivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActivePtrOutput {
	return o
}

func (o UpstreamHealthchecksActivePtrOutput) Elem() UpstreamHealthchecksActiveOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) UpstreamHealthchecksActive {
		if v != nil {
			return *v
		}
		var ret UpstreamHealthchecksActive
		return ret
	}).(UpstreamHealthchecksActiveOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) Concurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *int {
		if v == nil {
			return nil
		}
		return v.Concurrency
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) Healthy() UpstreamHealthchecksActiveHealthyPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *UpstreamHealthchecksActiveHealthy {
		if v == nil {
			return nil
		}
		return v.Healthy
	}).(UpstreamHealthchecksActiveHealthyPtrOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *string {
		if v == nil {
			return nil
		}
		return v.HttpPath
	}).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) HttpsSni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *string {
		if v == nil {
			return nil
		}
		return v.HttpsSni
	}).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) HttpsVerifyCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *bool {
		if v == nil {
			return nil
		}
		return v.HttpsVerifyCertificate
	}).(pulumi.BoolPtrOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksActivePtrOutput) Unhealthy() UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActive) *UpstreamHealthchecksActiveUnhealthy {
		if v == nil {
			return nil
		}
		return v.Unhealthy
	}).(UpstreamHealthchecksActiveUnhealthyPtrOutput)
}

type UpstreamHealthchecksActiveHealthy struct {
	HttpStatuses []int `pulumi:"httpStatuses"`
	Interval     *int  `pulumi:"interval"`
	Successes    *int  `pulumi:"successes"`
}

// UpstreamHealthchecksActiveHealthyInput is an input type that accepts UpstreamHealthchecksActiveHealthyArgs and UpstreamHealthchecksActiveHealthyOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksActiveHealthyInput` via:
//
//	UpstreamHealthchecksActiveHealthyArgs{...}
type UpstreamHealthchecksActiveHealthyInput interface {
	pulumi.Input

	ToUpstreamHealthchecksActiveHealthyOutput() UpstreamHealthchecksActiveHealthyOutput
	ToUpstreamHealthchecksActiveHealthyOutputWithContext(context.Context) UpstreamHealthchecksActiveHealthyOutput
}

type UpstreamHealthchecksActiveHealthyArgs struct {
	HttpStatuses pulumi.IntArrayInput `pulumi:"httpStatuses"`
	Interval     pulumi.IntPtrInput   `pulumi:"interval"`
	Successes    pulumi.IntPtrInput   `pulumi:"successes"`
}

func (UpstreamHealthchecksActiveHealthyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksActiveHealthy)(nil)).Elem()
}

func (i UpstreamHealthchecksActiveHealthyArgs) ToUpstreamHealthchecksActiveHealthyOutput() UpstreamHealthchecksActiveHealthyOutput {
	return i.ToUpstreamHealthchecksActiveHealthyOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksActiveHealthyArgs) ToUpstreamHealthchecksActiveHealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveHealthyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveHealthyOutput)
}

func (i UpstreamHealthchecksActiveHealthyArgs) ToUpstreamHealthchecksActiveHealthyPtrOutput() UpstreamHealthchecksActiveHealthyPtrOutput {
	return i.ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksActiveHealthyArgs) ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveHealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveHealthyOutput).ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(ctx)
}

// UpstreamHealthchecksActiveHealthyPtrInput is an input type that accepts UpstreamHealthchecksActiveHealthyArgs, UpstreamHealthchecksActiveHealthyPtr and UpstreamHealthchecksActiveHealthyPtrOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksActiveHealthyPtrInput` via:
//
//	        UpstreamHealthchecksActiveHealthyArgs{...}
//
//	or:
//
//	        nil
type UpstreamHealthchecksActiveHealthyPtrInput interface {
	pulumi.Input

	ToUpstreamHealthchecksActiveHealthyPtrOutput() UpstreamHealthchecksActiveHealthyPtrOutput
	ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(context.Context) UpstreamHealthchecksActiveHealthyPtrOutput
}

type upstreamHealthchecksActiveHealthyPtrType UpstreamHealthchecksActiveHealthyArgs

func UpstreamHealthchecksActiveHealthyPtr(v *UpstreamHealthchecksActiveHealthyArgs) UpstreamHealthchecksActiveHealthyPtrInput {
	return (*upstreamHealthchecksActiveHealthyPtrType)(v)
}

func (*upstreamHealthchecksActiveHealthyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksActiveHealthy)(nil)).Elem()
}

func (i *upstreamHealthchecksActiveHealthyPtrType) ToUpstreamHealthchecksActiveHealthyPtrOutput() UpstreamHealthchecksActiveHealthyPtrOutput {
	return i.ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(context.Background())
}

func (i *upstreamHealthchecksActiveHealthyPtrType) ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveHealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveHealthyPtrOutput)
}

type UpstreamHealthchecksActiveHealthyOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksActiveHealthyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksActiveHealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksActiveHealthyOutput) ToUpstreamHealthchecksActiveHealthyOutput() UpstreamHealthchecksActiveHealthyOutput {
	return o
}

func (o UpstreamHealthchecksActiveHealthyOutput) ToUpstreamHealthchecksActiveHealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveHealthyOutput {
	return o
}

func (o UpstreamHealthchecksActiveHealthyOutput) ToUpstreamHealthchecksActiveHealthyPtrOutput() UpstreamHealthchecksActiveHealthyPtrOutput {
	return o.ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(context.Background())
}

func (o UpstreamHealthchecksActiveHealthyOutput) ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveHealthyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamHealthchecksActiveHealthy) *UpstreamHealthchecksActiveHealthy {
		return &v
	}).(UpstreamHealthchecksActiveHealthyPtrOutput)
}

func (o UpstreamHealthchecksActiveHealthyOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveHealthy) []int { return v.HttpStatuses }).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksActiveHealthyOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveHealthy) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveHealthyOutput) Successes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveHealthy) *int { return v.Successes }).(pulumi.IntPtrOutput)
}

type UpstreamHealthchecksActiveHealthyPtrOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksActiveHealthyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksActiveHealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksActiveHealthyPtrOutput) ToUpstreamHealthchecksActiveHealthyPtrOutput() UpstreamHealthchecksActiveHealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksActiveHealthyPtrOutput) ToUpstreamHealthchecksActiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveHealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksActiveHealthyPtrOutput) Elem() UpstreamHealthchecksActiveHealthyOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveHealthy) UpstreamHealthchecksActiveHealthy {
		if v != nil {
			return *v
		}
		var ret UpstreamHealthchecksActiveHealthy
		return ret
	}).(UpstreamHealthchecksActiveHealthyOutput)
}

func (o UpstreamHealthchecksActiveHealthyPtrOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveHealthy) []int {
		if v == nil {
			return nil
		}
		return v.HttpStatuses
	}).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksActiveHealthyPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveHealthy) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveHealthyPtrOutput) Successes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveHealthy) *int {
		if v == nil {
			return nil
		}
		return v.Successes
	}).(pulumi.IntPtrOutput)
}

type UpstreamHealthchecksActiveUnhealthy struct {
	HttpFailures *int  `pulumi:"httpFailures"`
	HttpStatuses []int `pulumi:"httpStatuses"`
	Interval     *int  `pulumi:"interval"`
	TcpFailures  *int  `pulumi:"tcpFailures"`
	Timeouts     *int  `pulumi:"timeouts"`
}

// UpstreamHealthchecksActiveUnhealthyInput is an input type that accepts UpstreamHealthchecksActiveUnhealthyArgs and UpstreamHealthchecksActiveUnhealthyOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksActiveUnhealthyInput` via:
//
//	UpstreamHealthchecksActiveUnhealthyArgs{...}
type UpstreamHealthchecksActiveUnhealthyInput interface {
	pulumi.Input

	ToUpstreamHealthchecksActiveUnhealthyOutput() UpstreamHealthchecksActiveUnhealthyOutput
	ToUpstreamHealthchecksActiveUnhealthyOutputWithContext(context.Context) UpstreamHealthchecksActiveUnhealthyOutput
}

type UpstreamHealthchecksActiveUnhealthyArgs struct {
	HttpFailures pulumi.IntPtrInput   `pulumi:"httpFailures"`
	HttpStatuses pulumi.IntArrayInput `pulumi:"httpStatuses"`
	Interval     pulumi.IntPtrInput   `pulumi:"interval"`
	TcpFailures  pulumi.IntPtrInput   `pulumi:"tcpFailures"`
	Timeouts     pulumi.IntPtrInput   `pulumi:"timeouts"`
}

func (UpstreamHealthchecksActiveUnhealthyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksActiveUnhealthy)(nil)).Elem()
}

func (i UpstreamHealthchecksActiveUnhealthyArgs) ToUpstreamHealthchecksActiveUnhealthyOutput() UpstreamHealthchecksActiveUnhealthyOutput {
	return i.ToUpstreamHealthchecksActiveUnhealthyOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksActiveUnhealthyArgs) ToUpstreamHealthchecksActiveUnhealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveUnhealthyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveUnhealthyOutput)
}

func (i UpstreamHealthchecksActiveUnhealthyArgs) ToUpstreamHealthchecksActiveUnhealthyPtrOutput() UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return i.ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksActiveUnhealthyArgs) ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveUnhealthyOutput).ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(ctx)
}

// UpstreamHealthchecksActiveUnhealthyPtrInput is an input type that accepts UpstreamHealthchecksActiveUnhealthyArgs, UpstreamHealthchecksActiveUnhealthyPtr and UpstreamHealthchecksActiveUnhealthyPtrOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksActiveUnhealthyPtrInput` via:
//
//	        UpstreamHealthchecksActiveUnhealthyArgs{...}
//
//	or:
//
//	        nil
type UpstreamHealthchecksActiveUnhealthyPtrInput interface {
	pulumi.Input

	ToUpstreamHealthchecksActiveUnhealthyPtrOutput() UpstreamHealthchecksActiveUnhealthyPtrOutput
	ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(context.Context) UpstreamHealthchecksActiveUnhealthyPtrOutput
}

type upstreamHealthchecksActiveUnhealthyPtrType UpstreamHealthchecksActiveUnhealthyArgs

func UpstreamHealthchecksActiveUnhealthyPtr(v *UpstreamHealthchecksActiveUnhealthyArgs) UpstreamHealthchecksActiveUnhealthyPtrInput {
	return (*upstreamHealthchecksActiveUnhealthyPtrType)(v)
}

func (*upstreamHealthchecksActiveUnhealthyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksActiveUnhealthy)(nil)).Elem()
}

func (i *upstreamHealthchecksActiveUnhealthyPtrType) ToUpstreamHealthchecksActiveUnhealthyPtrOutput() UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return i.ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(context.Background())
}

func (i *upstreamHealthchecksActiveUnhealthyPtrType) ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksActiveUnhealthyPtrOutput)
}

type UpstreamHealthchecksActiveUnhealthyOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksActiveUnhealthyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksActiveUnhealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) ToUpstreamHealthchecksActiveUnhealthyOutput() UpstreamHealthchecksActiveUnhealthyOutput {
	return o
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) ToUpstreamHealthchecksActiveUnhealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveUnhealthyOutput {
	return o
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) ToUpstreamHealthchecksActiveUnhealthyPtrOutput() UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return o.ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(context.Background())
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamHealthchecksActiveUnhealthy) *UpstreamHealthchecksActiveUnhealthy {
		return &v
	}).(UpstreamHealthchecksActiveUnhealthyPtrOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) HttpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveUnhealthy) *int { return v.HttpFailures }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveUnhealthy) []int { return v.HttpStatuses }).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveUnhealthy) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) TcpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveUnhealthy) *int { return v.TcpFailures }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyOutput) Timeouts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksActiveUnhealthy) *int { return v.Timeouts }).(pulumi.IntPtrOutput)
}

type UpstreamHealthchecksActiveUnhealthyPtrOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksActiveUnhealthyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksActiveUnhealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) ToUpstreamHealthchecksActiveUnhealthyPtrOutput() UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) ToUpstreamHealthchecksActiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksActiveUnhealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) Elem() UpstreamHealthchecksActiveUnhealthyOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveUnhealthy) UpstreamHealthchecksActiveUnhealthy {
		if v != nil {
			return *v
		}
		var ret UpstreamHealthchecksActiveUnhealthy
		return ret
	}).(UpstreamHealthchecksActiveUnhealthyOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) HttpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveUnhealthy) *int {
		if v == nil {
			return nil
		}
		return v.HttpFailures
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveUnhealthy) []int {
		if v == nil {
			return nil
		}
		return v.HttpStatuses
	}).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveUnhealthy) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) TcpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveUnhealthy) *int {
		if v == nil {
			return nil
		}
		return v.TcpFailures
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksActiveUnhealthyPtrOutput) Timeouts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksActiveUnhealthy) *int {
		if v == nil {
			return nil
		}
		return v.Timeouts
	}).(pulumi.IntPtrOutput)
}

type UpstreamHealthchecksPassive struct {
	Healthy   *UpstreamHealthchecksPassiveHealthy   `pulumi:"healthy"`
	Type      *string                               `pulumi:"type"`
	Unhealthy *UpstreamHealthchecksPassiveUnhealthy `pulumi:"unhealthy"`
}

// UpstreamHealthchecksPassiveInput is an input type that accepts UpstreamHealthchecksPassiveArgs and UpstreamHealthchecksPassiveOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksPassiveInput` via:
//
//	UpstreamHealthchecksPassiveArgs{...}
type UpstreamHealthchecksPassiveInput interface {
	pulumi.Input

	ToUpstreamHealthchecksPassiveOutput() UpstreamHealthchecksPassiveOutput
	ToUpstreamHealthchecksPassiveOutputWithContext(context.Context) UpstreamHealthchecksPassiveOutput
}

type UpstreamHealthchecksPassiveArgs struct {
	Healthy   UpstreamHealthchecksPassiveHealthyPtrInput   `pulumi:"healthy"`
	Type      pulumi.StringPtrInput                        `pulumi:"type"`
	Unhealthy UpstreamHealthchecksPassiveUnhealthyPtrInput `pulumi:"unhealthy"`
}

func (UpstreamHealthchecksPassiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksPassive)(nil)).Elem()
}

func (i UpstreamHealthchecksPassiveArgs) ToUpstreamHealthchecksPassiveOutput() UpstreamHealthchecksPassiveOutput {
	return i.ToUpstreamHealthchecksPassiveOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksPassiveArgs) ToUpstreamHealthchecksPassiveOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveOutput)
}

func (i UpstreamHealthchecksPassiveArgs) ToUpstreamHealthchecksPassivePtrOutput() UpstreamHealthchecksPassivePtrOutput {
	return i.ToUpstreamHealthchecksPassivePtrOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksPassiveArgs) ToUpstreamHealthchecksPassivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveOutput).ToUpstreamHealthchecksPassivePtrOutputWithContext(ctx)
}

// UpstreamHealthchecksPassivePtrInput is an input type that accepts UpstreamHealthchecksPassiveArgs, UpstreamHealthchecksPassivePtr and UpstreamHealthchecksPassivePtrOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksPassivePtrInput` via:
//
//	        UpstreamHealthchecksPassiveArgs{...}
//
//	or:
//
//	        nil
type UpstreamHealthchecksPassivePtrInput interface {
	pulumi.Input

	ToUpstreamHealthchecksPassivePtrOutput() UpstreamHealthchecksPassivePtrOutput
	ToUpstreamHealthchecksPassivePtrOutputWithContext(context.Context) UpstreamHealthchecksPassivePtrOutput
}

type upstreamHealthchecksPassivePtrType UpstreamHealthchecksPassiveArgs

func UpstreamHealthchecksPassivePtr(v *UpstreamHealthchecksPassiveArgs) UpstreamHealthchecksPassivePtrInput {
	return (*upstreamHealthchecksPassivePtrType)(v)
}

func (*upstreamHealthchecksPassivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksPassive)(nil)).Elem()
}

func (i *upstreamHealthchecksPassivePtrType) ToUpstreamHealthchecksPassivePtrOutput() UpstreamHealthchecksPassivePtrOutput {
	return i.ToUpstreamHealthchecksPassivePtrOutputWithContext(context.Background())
}

func (i *upstreamHealthchecksPassivePtrType) ToUpstreamHealthchecksPassivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassivePtrOutput)
}

type UpstreamHealthchecksPassiveOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksPassiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksPassive)(nil)).Elem()
}

func (o UpstreamHealthchecksPassiveOutput) ToUpstreamHealthchecksPassiveOutput() UpstreamHealthchecksPassiveOutput {
	return o
}

func (o UpstreamHealthchecksPassiveOutput) ToUpstreamHealthchecksPassiveOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveOutput {
	return o
}

func (o UpstreamHealthchecksPassiveOutput) ToUpstreamHealthchecksPassivePtrOutput() UpstreamHealthchecksPassivePtrOutput {
	return o.ToUpstreamHealthchecksPassivePtrOutputWithContext(context.Background())
}

func (o UpstreamHealthchecksPassiveOutput) ToUpstreamHealthchecksPassivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamHealthchecksPassive) *UpstreamHealthchecksPassive {
		return &v
	}).(UpstreamHealthchecksPassivePtrOutput)
}

func (o UpstreamHealthchecksPassiveOutput) Healthy() UpstreamHealthchecksPassiveHealthyPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassive) *UpstreamHealthchecksPassiveHealthy { return v.Healthy }).(UpstreamHealthchecksPassiveHealthyPtrOutput)
}

func (o UpstreamHealthchecksPassiveOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassive) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksPassiveOutput) Unhealthy() UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassive) *UpstreamHealthchecksPassiveUnhealthy { return v.Unhealthy }).(UpstreamHealthchecksPassiveUnhealthyPtrOutput)
}

type UpstreamHealthchecksPassivePtrOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksPassivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksPassive)(nil)).Elem()
}

func (o UpstreamHealthchecksPassivePtrOutput) ToUpstreamHealthchecksPassivePtrOutput() UpstreamHealthchecksPassivePtrOutput {
	return o
}

func (o UpstreamHealthchecksPassivePtrOutput) ToUpstreamHealthchecksPassivePtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassivePtrOutput {
	return o
}

func (o UpstreamHealthchecksPassivePtrOutput) Elem() UpstreamHealthchecksPassiveOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassive) UpstreamHealthchecksPassive {
		if v != nil {
			return *v
		}
		var ret UpstreamHealthchecksPassive
		return ret
	}).(UpstreamHealthchecksPassiveOutput)
}

func (o UpstreamHealthchecksPassivePtrOutput) Healthy() UpstreamHealthchecksPassiveHealthyPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassive) *UpstreamHealthchecksPassiveHealthy {
		if v == nil {
			return nil
		}
		return v.Healthy
	}).(UpstreamHealthchecksPassiveHealthyPtrOutput)
}

func (o UpstreamHealthchecksPassivePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassive) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o UpstreamHealthchecksPassivePtrOutput) Unhealthy() UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassive) *UpstreamHealthchecksPassiveUnhealthy {
		if v == nil {
			return nil
		}
		return v.Unhealthy
	}).(UpstreamHealthchecksPassiveUnhealthyPtrOutput)
}

type UpstreamHealthchecksPassiveHealthy struct {
	HttpStatuses []int `pulumi:"httpStatuses"`
	Successes    *int  `pulumi:"successes"`
}

// UpstreamHealthchecksPassiveHealthyInput is an input type that accepts UpstreamHealthchecksPassiveHealthyArgs and UpstreamHealthchecksPassiveHealthyOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksPassiveHealthyInput` via:
//
//	UpstreamHealthchecksPassiveHealthyArgs{...}
type UpstreamHealthchecksPassiveHealthyInput interface {
	pulumi.Input

	ToUpstreamHealthchecksPassiveHealthyOutput() UpstreamHealthchecksPassiveHealthyOutput
	ToUpstreamHealthchecksPassiveHealthyOutputWithContext(context.Context) UpstreamHealthchecksPassiveHealthyOutput
}

type UpstreamHealthchecksPassiveHealthyArgs struct {
	HttpStatuses pulumi.IntArrayInput `pulumi:"httpStatuses"`
	Successes    pulumi.IntPtrInput   `pulumi:"successes"`
}

func (UpstreamHealthchecksPassiveHealthyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksPassiveHealthy)(nil)).Elem()
}

func (i UpstreamHealthchecksPassiveHealthyArgs) ToUpstreamHealthchecksPassiveHealthyOutput() UpstreamHealthchecksPassiveHealthyOutput {
	return i.ToUpstreamHealthchecksPassiveHealthyOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksPassiveHealthyArgs) ToUpstreamHealthchecksPassiveHealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveHealthyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveHealthyOutput)
}

func (i UpstreamHealthchecksPassiveHealthyArgs) ToUpstreamHealthchecksPassiveHealthyPtrOutput() UpstreamHealthchecksPassiveHealthyPtrOutput {
	return i.ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksPassiveHealthyArgs) ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveHealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveHealthyOutput).ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(ctx)
}

// UpstreamHealthchecksPassiveHealthyPtrInput is an input type that accepts UpstreamHealthchecksPassiveHealthyArgs, UpstreamHealthchecksPassiveHealthyPtr and UpstreamHealthchecksPassiveHealthyPtrOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksPassiveHealthyPtrInput` via:
//
//	        UpstreamHealthchecksPassiveHealthyArgs{...}
//
//	or:
//
//	        nil
type UpstreamHealthchecksPassiveHealthyPtrInput interface {
	pulumi.Input

	ToUpstreamHealthchecksPassiveHealthyPtrOutput() UpstreamHealthchecksPassiveHealthyPtrOutput
	ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(context.Context) UpstreamHealthchecksPassiveHealthyPtrOutput
}

type upstreamHealthchecksPassiveHealthyPtrType UpstreamHealthchecksPassiveHealthyArgs

func UpstreamHealthchecksPassiveHealthyPtr(v *UpstreamHealthchecksPassiveHealthyArgs) UpstreamHealthchecksPassiveHealthyPtrInput {
	return (*upstreamHealthchecksPassiveHealthyPtrType)(v)
}

func (*upstreamHealthchecksPassiveHealthyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksPassiveHealthy)(nil)).Elem()
}

func (i *upstreamHealthchecksPassiveHealthyPtrType) ToUpstreamHealthchecksPassiveHealthyPtrOutput() UpstreamHealthchecksPassiveHealthyPtrOutput {
	return i.ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(context.Background())
}

func (i *upstreamHealthchecksPassiveHealthyPtrType) ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveHealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveHealthyPtrOutput)
}

type UpstreamHealthchecksPassiveHealthyOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksPassiveHealthyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksPassiveHealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksPassiveHealthyOutput) ToUpstreamHealthchecksPassiveHealthyOutput() UpstreamHealthchecksPassiveHealthyOutput {
	return o
}

func (o UpstreamHealthchecksPassiveHealthyOutput) ToUpstreamHealthchecksPassiveHealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveHealthyOutput {
	return o
}

func (o UpstreamHealthchecksPassiveHealthyOutput) ToUpstreamHealthchecksPassiveHealthyPtrOutput() UpstreamHealthchecksPassiveHealthyPtrOutput {
	return o.ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(context.Background())
}

func (o UpstreamHealthchecksPassiveHealthyOutput) ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveHealthyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamHealthchecksPassiveHealthy) *UpstreamHealthchecksPassiveHealthy {
		return &v
	}).(UpstreamHealthchecksPassiveHealthyPtrOutput)
}

func (o UpstreamHealthchecksPassiveHealthyOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassiveHealthy) []int { return v.HttpStatuses }).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksPassiveHealthyOutput) Successes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassiveHealthy) *int { return v.Successes }).(pulumi.IntPtrOutput)
}

type UpstreamHealthchecksPassiveHealthyPtrOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksPassiveHealthyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksPassiveHealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksPassiveHealthyPtrOutput) ToUpstreamHealthchecksPassiveHealthyPtrOutput() UpstreamHealthchecksPassiveHealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksPassiveHealthyPtrOutput) ToUpstreamHealthchecksPassiveHealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveHealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksPassiveHealthyPtrOutput) Elem() UpstreamHealthchecksPassiveHealthyOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveHealthy) UpstreamHealthchecksPassiveHealthy {
		if v != nil {
			return *v
		}
		var ret UpstreamHealthchecksPassiveHealthy
		return ret
	}).(UpstreamHealthchecksPassiveHealthyOutput)
}

func (o UpstreamHealthchecksPassiveHealthyPtrOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveHealthy) []int {
		if v == nil {
			return nil
		}
		return v.HttpStatuses
	}).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksPassiveHealthyPtrOutput) Successes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveHealthy) *int {
		if v == nil {
			return nil
		}
		return v.Successes
	}).(pulumi.IntPtrOutput)
}

type UpstreamHealthchecksPassiveUnhealthy struct {
	HttpFailures *int  `pulumi:"httpFailures"`
	HttpStatuses []int `pulumi:"httpStatuses"`
	TcpFailures  *int  `pulumi:"tcpFailures"`
	Timeouts     *int  `pulumi:"timeouts"`
}

// UpstreamHealthchecksPassiveUnhealthyInput is an input type that accepts UpstreamHealthchecksPassiveUnhealthyArgs and UpstreamHealthchecksPassiveUnhealthyOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksPassiveUnhealthyInput` via:
//
//	UpstreamHealthchecksPassiveUnhealthyArgs{...}
type UpstreamHealthchecksPassiveUnhealthyInput interface {
	pulumi.Input

	ToUpstreamHealthchecksPassiveUnhealthyOutput() UpstreamHealthchecksPassiveUnhealthyOutput
	ToUpstreamHealthchecksPassiveUnhealthyOutputWithContext(context.Context) UpstreamHealthchecksPassiveUnhealthyOutput
}

type UpstreamHealthchecksPassiveUnhealthyArgs struct {
	HttpFailures pulumi.IntPtrInput   `pulumi:"httpFailures"`
	HttpStatuses pulumi.IntArrayInput `pulumi:"httpStatuses"`
	TcpFailures  pulumi.IntPtrInput   `pulumi:"tcpFailures"`
	Timeouts     pulumi.IntPtrInput   `pulumi:"timeouts"`
}

func (UpstreamHealthchecksPassiveUnhealthyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksPassiveUnhealthy)(nil)).Elem()
}

func (i UpstreamHealthchecksPassiveUnhealthyArgs) ToUpstreamHealthchecksPassiveUnhealthyOutput() UpstreamHealthchecksPassiveUnhealthyOutput {
	return i.ToUpstreamHealthchecksPassiveUnhealthyOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksPassiveUnhealthyArgs) ToUpstreamHealthchecksPassiveUnhealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveUnhealthyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveUnhealthyOutput)
}

func (i UpstreamHealthchecksPassiveUnhealthyArgs) ToUpstreamHealthchecksPassiveUnhealthyPtrOutput() UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return i.ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(context.Background())
}

func (i UpstreamHealthchecksPassiveUnhealthyArgs) ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveUnhealthyOutput).ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(ctx)
}

// UpstreamHealthchecksPassiveUnhealthyPtrInput is an input type that accepts UpstreamHealthchecksPassiveUnhealthyArgs, UpstreamHealthchecksPassiveUnhealthyPtr and UpstreamHealthchecksPassiveUnhealthyPtrOutput values.
// You can construct a concrete instance of `UpstreamHealthchecksPassiveUnhealthyPtrInput` via:
//
//	        UpstreamHealthchecksPassiveUnhealthyArgs{...}
//
//	or:
//
//	        nil
type UpstreamHealthchecksPassiveUnhealthyPtrInput interface {
	pulumi.Input

	ToUpstreamHealthchecksPassiveUnhealthyPtrOutput() UpstreamHealthchecksPassiveUnhealthyPtrOutput
	ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(context.Context) UpstreamHealthchecksPassiveUnhealthyPtrOutput
}

type upstreamHealthchecksPassiveUnhealthyPtrType UpstreamHealthchecksPassiveUnhealthyArgs

func UpstreamHealthchecksPassiveUnhealthyPtr(v *UpstreamHealthchecksPassiveUnhealthyArgs) UpstreamHealthchecksPassiveUnhealthyPtrInput {
	return (*upstreamHealthchecksPassiveUnhealthyPtrType)(v)
}

func (*upstreamHealthchecksPassiveUnhealthyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksPassiveUnhealthy)(nil)).Elem()
}

func (i *upstreamHealthchecksPassiveUnhealthyPtrType) ToUpstreamHealthchecksPassiveUnhealthyPtrOutput() UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return i.ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(context.Background())
}

func (i *upstreamHealthchecksPassiveUnhealthyPtrType) ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamHealthchecksPassiveUnhealthyPtrOutput)
}

type UpstreamHealthchecksPassiveUnhealthyOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksPassiveUnhealthyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamHealthchecksPassiveUnhealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) ToUpstreamHealthchecksPassiveUnhealthyOutput() UpstreamHealthchecksPassiveUnhealthyOutput {
	return o
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) ToUpstreamHealthchecksPassiveUnhealthyOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveUnhealthyOutput {
	return o
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) ToUpstreamHealthchecksPassiveUnhealthyPtrOutput() UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return o.ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(context.Background())
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamHealthchecksPassiveUnhealthy) *UpstreamHealthchecksPassiveUnhealthy {
		return &v
	}).(UpstreamHealthchecksPassiveUnhealthyPtrOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) HttpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassiveUnhealthy) *int { return v.HttpFailures }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassiveUnhealthy) []int { return v.HttpStatuses }).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) TcpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassiveUnhealthy) *int { return v.TcpFailures }).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyOutput) Timeouts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpstreamHealthchecksPassiveUnhealthy) *int { return v.Timeouts }).(pulumi.IntPtrOutput)
}

type UpstreamHealthchecksPassiveUnhealthyPtrOutput struct{ *pulumi.OutputState }

func (UpstreamHealthchecksPassiveUnhealthyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamHealthchecksPassiveUnhealthy)(nil)).Elem()
}

func (o UpstreamHealthchecksPassiveUnhealthyPtrOutput) ToUpstreamHealthchecksPassiveUnhealthyPtrOutput() UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksPassiveUnhealthyPtrOutput) ToUpstreamHealthchecksPassiveUnhealthyPtrOutputWithContext(ctx context.Context) UpstreamHealthchecksPassiveUnhealthyPtrOutput {
	return o
}

func (o UpstreamHealthchecksPassiveUnhealthyPtrOutput) Elem() UpstreamHealthchecksPassiveUnhealthyOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveUnhealthy) UpstreamHealthchecksPassiveUnhealthy {
		if v != nil {
			return *v
		}
		var ret UpstreamHealthchecksPassiveUnhealthy
		return ret
	}).(UpstreamHealthchecksPassiveUnhealthyOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyPtrOutput) HttpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveUnhealthy) *int {
		if v == nil {
			return nil
		}
		return v.HttpFailures
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyPtrOutput) HttpStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveUnhealthy) []int {
		if v == nil {
			return nil
		}
		return v.HttpStatuses
	}).(pulumi.IntArrayOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyPtrOutput) TcpFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveUnhealthy) *int {
		if v == nil {
			return nil
		}
		return v.TcpFailures
	}).(pulumi.IntPtrOutput)
}

func (o UpstreamHealthchecksPassiveUnhealthyPtrOutput) Timeouts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpstreamHealthchecksPassiveUnhealthy) *int {
		if v == nil {
			return nil
		}
		return v.Timeouts
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteDestinationInput)(nil)).Elem(), RouteDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteDestinationArrayInput)(nil)).Elem(), RouteDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHeaderInput)(nil)).Elem(), RouteHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteHeaderArrayInput)(nil)).Elem(), RouteHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSourceInput)(nil)).Elem(), RouteSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteSourceArrayInput)(nil)).Elem(), RouteSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksInput)(nil)).Elem(), UpstreamHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksPtrInput)(nil)).Elem(), UpstreamHealthchecksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksActiveInput)(nil)).Elem(), UpstreamHealthchecksActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksActivePtrInput)(nil)).Elem(), UpstreamHealthchecksActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksActiveHealthyInput)(nil)).Elem(), UpstreamHealthchecksActiveHealthyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksActiveHealthyPtrInput)(nil)).Elem(), UpstreamHealthchecksActiveHealthyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksActiveUnhealthyInput)(nil)).Elem(), UpstreamHealthchecksActiveUnhealthyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksActiveUnhealthyPtrInput)(nil)).Elem(), UpstreamHealthchecksActiveUnhealthyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksPassiveInput)(nil)).Elem(), UpstreamHealthchecksPassiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksPassivePtrInput)(nil)).Elem(), UpstreamHealthchecksPassiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksPassiveHealthyInput)(nil)).Elem(), UpstreamHealthchecksPassiveHealthyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksPassiveHealthyPtrInput)(nil)).Elem(), UpstreamHealthchecksPassiveHealthyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksPassiveUnhealthyInput)(nil)).Elem(), UpstreamHealthchecksPassiveUnhealthyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamHealthchecksPassiveUnhealthyPtrInput)(nil)).Elem(), UpstreamHealthchecksPassiveUnhealthyArgs{})
	pulumi.RegisterOutputType(RouteDestinationOutput{})
	pulumi.RegisterOutputType(RouteDestinationArrayOutput{})
	pulumi.RegisterOutputType(RouteHeaderOutput{})
	pulumi.RegisterOutputType(RouteHeaderArrayOutput{})
	pulumi.RegisterOutputType(RouteSourceOutput{})
	pulumi.RegisterOutputType(RouteSourceArrayOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksPtrOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksActiveOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksActivePtrOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksActiveHealthyOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksActiveHealthyPtrOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksActiveUnhealthyOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksActiveUnhealthyPtrOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksPassiveOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksPassivePtrOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksPassiveHealthyOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksPassiveHealthyPtrOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksPassiveUnhealthyOutput{})
	pulumi.RegisterOutputType(UpstreamHealthchecksPassiveUnhealthyPtrOutput{})
}
