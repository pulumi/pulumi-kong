// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kong;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.kong.TargetArgs;
import com.pulumi.kong.Utilities;
import com.pulumi.kong.inputs.TargetState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * # kong.Target
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.kong.Target;
 * import com.pulumi.kong.TargetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var target = new Target("target", TargetArgs.builder()
 *             .target("sample_target:80")
 *             .weight(10)
 *             .upstreamId(upstream.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * To import a target use a combination of the upstream id and the target id as follows:
 * 
 * ```sh
 * $ pulumi import kong:index/target:Target &lt;target_identifier&gt; &lt;upstream_id&gt;/&lt;target_id&gt;
 * ```
 * 
 */
@ResourceType(type="kong:index/target:Target")
public class Target extends com.pulumi.resources.CustomResource {
    /**
     * A list set of strings associated with the Plugin for grouping and filtering
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return A list set of strings associated with the Plugin for grouping and filtering
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * is the target address (IP or hostname) and port. If omitted the port defaults to 8000.
     * 
     */
    @Export(name="target", refs={String.class}, tree="[0]")
    private Output<String> target;

    /**
     * @return is the target address (IP or hostname) and port. If omitted the port defaults to 8000.
     * 
     */
    public Output<String> target() {
        return this.target;
    }
    /**
     * is the id of the upstream to apply this target to.
     * 
     */
    @Export(name="upstreamId", refs={String.class}, tree="[0]")
    private Output<String> upstreamId;

    /**
     * @return is the id of the upstream to apply this target to.
     * 
     */
    public Output<String> upstreamId() {
        return this.upstreamId;
    }
    /**
     * is the weight this target gets within the upstream load balancer (0-1000, defaults to 100).
     * 
     */
    @Export(name="weight", refs={Integer.class}, tree="[0]")
    private Output<Integer> weight;

    /**
     * @return is the weight this target gets within the upstream load balancer (0-1000, defaults to 100).
     * 
     */
    public Output<Integer> weight() {
        return this.weight;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Target(java.lang.String name) {
        this(name, TargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Target(java.lang.String name, TargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Target(java.lang.String name, TargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kong:index/target:Target", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Target(java.lang.String name, Output<java.lang.String> id, @Nullable TargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kong:index/target:Target", name, state, makeResourceOptions(options, id), false);
    }

    private static TargetArgs makeArgs(TargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TargetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Target get(java.lang.String name, Output<java.lang.String> id, @Nullable TargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Target(name, id, state, options);
    }
}
