// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kong;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.kong.ConsumerKeyAuthArgs;
import com.pulumi.kong.Utilities;
import com.pulumi.kong.inputs.ConsumerKeyAuthState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # kong.ConsumerKeyAuth
 * 
 * Resource that allows you to configure the [Key Authentication](https://docs.konghq.com/hub/kong-inc/key-auth/) plugin for a consumer.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.kong.Consumer;
 * import com.pulumi.kong.ConsumerArgs;
 * import com.pulumi.kong.Plugin;
 * import com.pulumi.kong.PluginArgs;
 * import com.pulumi.kong.ConsumerKeyAuth;
 * import com.pulumi.kong.ConsumerKeyAuthArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myConsumer = new Consumer("myConsumer", ConsumerArgs.builder()
 *             .username("User1")
 *             .customId("123")
 *             .build());
 * 
 *         var keyAuthPlugin = new Plugin("keyAuthPlugin", PluginArgs.builder()
 *             .name("key-auth")
 *             .build());
 * 
 *         var consumerKeyAuth = new ConsumerKeyAuth("consumerKeyAuth", ConsumerKeyAuthArgs.builder()
 *             .consumerId(myConsumer.id())
 *             .key("secret")
 *             .tags(            
 *                 "myTag",
 *                 "anotherTag")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="kong:index/consumerKeyAuth:ConsumerKeyAuth")
public class ConsumerKeyAuth extends com.pulumi.resources.CustomResource {
    /**
     * the id of the consumer to associate the credentials to
     * 
     */
    @Export(name="consumerId", refs={String.class}, tree="[0]")
    private Output<String> consumerId;

    /**
     * @return the id of the consumer to associate the credentials to
     * 
     */
    public Output<String> consumerId() {
        return this.consumerId;
    }
    /**
     * Unique key to authenticate the client; if omitted the plugin will generate one
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return Unique key to authenticate the client; if omitted the plugin will generate one
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * A list of strings associated with the consumer key auth for grouping and filtering
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return A list of strings associated with the consumer key auth for grouping and filtering
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConsumerKeyAuth(String name) {
        this(name, ConsumerKeyAuthArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConsumerKeyAuth(String name, ConsumerKeyAuthArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConsumerKeyAuth(String name, ConsumerKeyAuthArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kong:index/consumerKeyAuth:ConsumerKeyAuth", name, args == null ? ConsumerKeyAuthArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConsumerKeyAuth(String name, Output<String> id, @Nullable ConsumerKeyAuthState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("kong:index/consumerKeyAuth:ConsumerKeyAuth", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "key"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConsumerKeyAuth get(String name, Output<String> id, @Nullable ConsumerKeyAuthState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConsumerKeyAuth(name, id, state, options);
    }
}
