// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kong;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumerOauth2Args extends com.pulumi.resources.ResourceArgs {

    public static final ConsumerOauth2Args Empty = new ConsumerOauth2Args();

    /**
     * Unique oauth2 client id. If not set, the oauth2 plugin will generate one
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Unique oauth2 client id. If not set, the oauth2 plugin will generate one
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Unique oauth2 client secret. If not set, the oauth2 plugin will generate one
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Unique oauth2 client secret. If not set, the oauth2 plugin will generate one
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * The id of the consumer to be configured with oauth2.
     * 
     */
    @Import(name="consumerId", required=true)
    private Output<String> consumerId;

    /**
     * @return The id of the consumer to be configured with oauth2.
     * 
     */
    public Output<String> consumerId() {
        return this.consumerId;
    }

    /**
     * A boolean flag that indicates whether the client_secret field will be stored in hashed form. If enabled on existing plugin instances, client secrets are hashed on the fly upon first usage. Default: `false`.
     * 
     */
    @Import(name="hashSecret")
    private @Nullable Output<Boolean> hashSecret;

    /**
     * @return A boolean flag that indicates whether the client_secret field will be stored in hashed form. If enabled on existing plugin instances, client secrets are hashed on the fly upon first usage. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> hashSecret() {
        return Optional.ofNullable(this.hashSecret);
    }

    /**
     * The name associated with the credential.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name associated with the credential.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An array with one or more URLs in your app where users will be sent after authorization ([RFC 6742 Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)).
     * 
     */
    @Import(name="redirectUris", required=true)
    private Output<List<String>> redirectUris;

    /**
     * @return An array with one or more URLs in your app where users will be sent after authorization ([RFC 6742 Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)).
     * 
     */
    public Output<List<String>> redirectUris() {
        return this.redirectUris;
    }

    /**
     * A list of strings associated with the consumer for grouping and filtering.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return A list of strings associated with the consumer for grouping and filtering.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ConsumerOauth2Args() {}

    private ConsumerOauth2Args(ConsumerOauth2Args $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.consumerId = $.consumerId;
        this.hashSecret = $.hashSecret;
        this.name = $.name;
        this.redirectUris = $.redirectUris;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumerOauth2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumerOauth2Args $;

        public Builder() {
            $ = new ConsumerOauth2Args();
        }

        public Builder(ConsumerOauth2Args defaults) {
            $ = new ConsumerOauth2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId Unique oauth2 client id. If not set, the oauth2 plugin will generate one
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Unique oauth2 client id. If not set, the oauth2 plugin will generate one
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Unique oauth2 client secret. If not set, the oauth2 plugin will generate one
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Unique oauth2 client secret. If not set, the oauth2 plugin will generate one
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param consumerId The id of the consumer to be configured with oauth2.
         * 
         * @return builder
         * 
         */
        public Builder consumerId(Output<String> consumerId) {
            $.consumerId = consumerId;
            return this;
        }

        /**
         * @param consumerId The id of the consumer to be configured with oauth2.
         * 
         * @return builder
         * 
         */
        public Builder consumerId(String consumerId) {
            return consumerId(Output.of(consumerId));
        }

        /**
         * @param hashSecret A boolean flag that indicates whether the client_secret field will be stored in hashed form. If enabled on existing plugin instances, client secrets are hashed on the fly upon first usage. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder hashSecret(@Nullable Output<Boolean> hashSecret) {
            $.hashSecret = hashSecret;
            return this;
        }

        /**
         * @param hashSecret A boolean flag that indicates whether the client_secret field will be stored in hashed form. If enabled on existing plugin instances, client secrets are hashed on the fly upon first usage. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder hashSecret(Boolean hashSecret) {
            return hashSecret(Output.of(hashSecret));
        }

        /**
         * @param name The name associated with the credential.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name associated with the credential.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param redirectUris An array with one or more URLs in your app where users will be sent after authorization ([RFC 6742 Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)).
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(Output<List<String>> redirectUris) {
            $.redirectUris = redirectUris;
            return this;
        }

        /**
         * @param redirectUris An array with one or more URLs in your app where users will be sent after authorization ([RFC 6742 Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)).
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(List<String> redirectUris) {
            return redirectUris(Output.of(redirectUris));
        }

        /**
         * @param redirectUris An array with one or more URLs in your app where users will be sent after authorization ([RFC 6742 Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)).
         * 
         * @return builder
         * 
         */
        public Builder redirectUris(String... redirectUris) {
            return redirectUris(List.of(redirectUris));
        }

        /**
         * @param tags A list of strings associated with the consumer for grouping and filtering.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of strings associated with the consumer for grouping and filtering.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of strings associated with the consumer for grouping and filtering.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public ConsumerOauth2Args build() {
            if ($.consumerId == null) {
                throw new MissingRequiredPropertyException("ConsumerOauth2Args", "consumerId");
            }
            if ($.redirectUris == null) {
                throw new MissingRequiredPropertyException("ConsumerOauth2Args", "redirectUris");
            }
            return $;
        }
    }

}
