// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kong.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UpstreamHealthchecksPassiveUnhealthyArgs extends com.pulumi.resources.ResourceArgs {

    public static final UpstreamHealthchecksPassiveUnhealthyArgs Empty = new UpstreamHealthchecksPassiveUnhealthyArgs();

    /**
     * is a number of HTTP failures in active probes (as defined by `healthchecks.active.unhealthy.http_statuses`) to consider a target unhealthy. Defaults to `0`.
     * 
     */
    @Import(name="httpFailures")
    private @Nullable Output<Integer> httpFailures;

    /**
     * @return is a number of HTTP failures in active probes (as defined by `healthchecks.active.unhealthy.http_statuses`) to consider a target unhealthy. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> httpFailures() {
        return Optional.ofNullable(this.httpFailures);
    }

    /**
     * is an array of HTTP statuses to consider a success, indicating healthiness, when returned by a probe in active health checks. Defaults to `[200, 302]`.
     * 
     */
    @Import(name="httpStatuses")
    private @Nullable Output<List<Integer>> httpStatuses;

    /**
     * @return is an array of HTTP statuses to consider a success, indicating healthiness, when returned by a probe in active health checks. Defaults to `[200, 302]`.
     * 
     */
    public Optional<Output<List<Integer>>> httpStatuses() {
        return Optional.ofNullable(this.httpStatuses);
    }

    /**
     * is a number of TCP failures in active probes to consider a target unhealthy. Defaults to `0`.
     * 
     */
    @Import(name="tcpFailures")
    private @Nullable Output<Integer> tcpFailures;

    /**
     * @return is a number of TCP failures in active probes to consider a target unhealthy. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> tcpFailures() {
        return Optional.ofNullable(this.tcpFailures);
    }

    /**
     * is a number of timeouts in active probes to consider a target unhealthy. Defaults to `0`.
     * 
     */
    @Import(name="timeouts")
    private @Nullable Output<Integer> timeouts;

    /**
     * @return is a number of timeouts in active probes to consider a target unhealthy. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private UpstreamHealthchecksPassiveUnhealthyArgs() {}

    private UpstreamHealthchecksPassiveUnhealthyArgs(UpstreamHealthchecksPassiveUnhealthyArgs $) {
        this.httpFailures = $.httpFailures;
        this.httpStatuses = $.httpStatuses;
        this.tcpFailures = $.tcpFailures;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UpstreamHealthchecksPassiveUnhealthyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UpstreamHealthchecksPassiveUnhealthyArgs $;

        public Builder() {
            $ = new UpstreamHealthchecksPassiveUnhealthyArgs();
        }

        public Builder(UpstreamHealthchecksPassiveUnhealthyArgs defaults) {
            $ = new UpstreamHealthchecksPassiveUnhealthyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpFailures is a number of HTTP failures in active probes (as defined by `healthchecks.active.unhealthy.http_statuses`) to consider a target unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder httpFailures(@Nullable Output<Integer> httpFailures) {
            $.httpFailures = httpFailures;
            return this;
        }

        /**
         * @param httpFailures is a number of HTTP failures in active probes (as defined by `healthchecks.active.unhealthy.http_statuses`) to consider a target unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder httpFailures(Integer httpFailures) {
            return httpFailures(Output.of(httpFailures));
        }

        /**
         * @param httpStatuses is an array of HTTP statuses to consider a success, indicating healthiness, when returned by a probe in active health checks. Defaults to `[200, 302]`.
         * 
         * @return builder
         * 
         */
        public Builder httpStatuses(@Nullable Output<List<Integer>> httpStatuses) {
            $.httpStatuses = httpStatuses;
            return this;
        }

        /**
         * @param httpStatuses is an array of HTTP statuses to consider a success, indicating healthiness, when returned by a probe in active health checks. Defaults to `[200, 302]`.
         * 
         * @return builder
         * 
         */
        public Builder httpStatuses(List<Integer> httpStatuses) {
            return httpStatuses(Output.of(httpStatuses));
        }

        /**
         * @param httpStatuses is an array of HTTP statuses to consider a success, indicating healthiness, when returned by a probe in active health checks. Defaults to `[200, 302]`.
         * 
         * @return builder
         * 
         */
        public Builder httpStatuses(Integer... httpStatuses) {
            return httpStatuses(List.of(httpStatuses));
        }

        /**
         * @param tcpFailures is a number of TCP failures in active probes to consider a target unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder tcpFailures(@Nullable Output<Integer> tcpFailures) {
            $.tcpFailures = tcpFailures;
            return this;
        }

        /**
         * @param tcpFailures is a number of TCP failures in active probes to consider a target unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder tcpFailures(Integer tcpFailures) {
            return tcpFailures(Output.of(tcpFailures));
        }

        /**
         * @param timeouts is a number of timeouts in active probes to consider a target unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder timeouts(@Nullable Output<Integer> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        /**
         * @param timeouts is a number of timeouts in active probes to consider a target unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder timeouts(Integer timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public UpstreamHealthchecksPassiveUnhealthyArgs build() {
            return $;
        }
    }

}
