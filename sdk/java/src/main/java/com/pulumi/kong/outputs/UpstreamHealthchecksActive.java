// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kong.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kong.outputs.UpstreamHealthchecksActiveHealthy;
import com.pulumi.kong.outputs.UpstreamHealthchecksActiveUnhealthy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UpstreamHealthchecksActive {
    private @Nullable Integer concurrency;
    private @Nullable UpstreamHealthchecksActiveHealthy healthy;
    private @Nullable String httpPath;
    private @Nullable String httpsSni;
    private @Nullable Boolean httpsVerifyCertificate;
    private @Nullable Integer timeout;
    private @Nullable String type;
    private @Nullable UpstreamHealthchecksActiveUnhealthy unhealthy;

    private UpstreamHealthchecksActive() {}
    public Optional<Integer> concurrency() {
        return Optional.ofNullable(this.concurrency);
    }
    public Optional<UpstreamHealthchecksActiveHealthy> healthy() {
        return Optional.ofNullable(this.healthy);
    }
    public Optional<String> httpPath() {
        return Optional.ofNullable(this.httpPath);
    }
    public Optional<String> httpsSni() {
        return Optional.ofNullable(this.httpsSni);
    }
    public Optional<Boolean> httpsVerifyCertificate() {
        return Optional.ofNullable(this.httpsVerifyCertificate);
    }
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public Optional<UpstreamHealthchecksActiveUnhealthy> unhealthy() {
        return Optional.ofNullable(this.unhealthy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UpstreamHealthchecksActive defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer concurrency;
        private @Nullable UpstreamHealthchecksActiveHealthy healthy;
        private @Nullable String httpPath;
        private @Nullable String httpsSni;
        private @Nullable Boolean httpsVerifyCertificate;
        private @Nullable Integer timeout;
        private @Nullable String type;
        private @Nullable UpstreamHealthchecksActiveUnhealthy unhealthy;
        public Builder() {}
        public Builder(UpstreamHealthchecksActive defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.concurrency = defaults.concurrency;
    	      this.healthy = defaults.healthy;
    	      this.httpPath = defaults.httpPath;
    	      this.httpsSni = defaults.httpsSni;
    	      this.httpsVerifyCertificate = defaults.httpsVerifyCertificate;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
    	      this.unhealthy = defaults.unhealthy;
        }

        @CustomType.Setter
        public Builder concurrency(@Nullable Integer concurrency) {
            this.concurrency = concurrency;
            return this;
        }
        @CustomType.Setter
        public Builder healthy(@Nullable UpstreamHealthchecksActiveHealthy healthy) {
            this.healthy = healthy;
            return this;
        }
        @CustomType.Setter
        public Builder httpPath(@Nullable String httpPath) {
            this.httpPath = httpPath;
            return this;
        }
        @CustomType.Setter
        public Builder httpsSni(@Nullable String httpsSni) {
            this.httpsSni = httpsSni;
            return this;
        }
        @CustomType.Setter
        public Builder httpsVerifyCertificate(@Nullable Boolean httpsVerifyCertificate) {
            this.httpsVerifyCertificate = httpsVerifyCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder unhealthy(@Nullable UpstreamHealthchecksActiveUnhealthy unhealthy) {
            this.unhealthy = unhealthy;
            return this;
        }
        public UpstreamHealthchecksActive build() {
            final var _resultValue = new UpstreamHealthchecksActive();
            _resultValue.concurrency = concurrency;
            _resultValue.healthy = healthy;
            _resultValue.httpPath = httpPath;
            _resultValue.httpsSni = httpsSni;
            _resultValue.httpsVerifyCertificate = httpsVerifyCertificate;
            _resultValue.timeout = timeout;
            _resultValue.type = type;
            _resultValue.unhealthy = unhealthy;
            return _resultValue;
        }
    }
}
