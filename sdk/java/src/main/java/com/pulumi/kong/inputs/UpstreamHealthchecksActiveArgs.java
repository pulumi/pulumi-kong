// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kong.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kong.inputs.UpstreamHealthchecksActiveHealthyArgs;
import com.pulumi.kong.inputs.UpstreamHealthchecksActiveUnhealthyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UpstreamHealthchecksActiveArgs extends com.pulumi.resources.ResourceArgs {

    public static final UpstreamHealthchecksActiveArgs Empty = new UpstreamHealthchecksActiveArgs();

    @Import(name="concurrency")
    private @Nullable Output<Integer> concurrency;

    public Optional<Output<Integer>> concurrency() {
        return Optional.ofNullable(this.concurrency);
    }

    @Import(name="healthy")
    private @Nullable Output<UpstreamHealthchecksActiveHealthyArgs> healthy;

    public Optional<Output<UpstreamHealthchecksActiveHealthyArgs>> healthy() {
        return Optional.ofNullable(this.healthy);
    }

    @Import(name="httpPath")
    private @Nullable Output<String> httpPath;

    public Optional<Output<String>> httpPath() {
        return Optional.ofNullable(this.httpPath);
    }

    @Import(name="httpsSni")
    private @Nullable Output<String> httpsSni;

    public Optional<Output<String>> httpsSni() {
        return Optional.ofNullable(this.httpsSni);
    }

    @Import(name="httpsVerifyCertificate")
    private @Nullable Output<Boolean> httpsVerifyCertificate;

    public Optional<Output<Boolean>> httpsVerifyCertificate() {
        return Optional.ofNullable(this.httpsVerifyCertificate);
    }

    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="unhealthy")
    private @Nullable Output<UpstreamHealthchecksActiveUnhealthyArgs> unhealthy;

    public Optional<Output<UpstreamHealthchecksActiveUnhealthyArgs>> unhealthy() {
        return Optional.ofNullable(this.unhealthy);
    }

    private UpstreamHealthchecksActiveArgs() {}

    private UpstreamHealthchecksActiveArgs(UpstreamHealthchecksActiveArgs $) {
        this.concurrency = $.concurrency;
        this.healthy = $.healthy;
        this.httpPath = $.httpPath;
        this.httpsSni = $.httpsSni;
        this.httpsVerifyCertificate = $.httpsVerifyCertificate;
        this.timeout = $.timeout;
        this.type = $.type;
        this.unhealthy = $.unhealthy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UpstreamHealthchecksActiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UpstreamHealthchecksActiveArgs $;

        public Builder() {
            $ = new UpstreamHealthchecksActiveArgs();
        }

        public Builder(UpstreamHealthchecksActiveArgs defaults) {
            $ = new UpstreamHealthchecksActiveArgs(Objects.requireNonNull(defaults));
        }

        public Builder concurrency(@Nullable Output<Integer> concurrency) {
            $.concurrency = concurrency;
            return this;
        }

        public Builder concurrency(Integer concurrency) {
            return concurrency(Output.of(concurrency));
        }

        public Builder healthy(@Nullable Output<UpstreamHealthchecksActiveHealthyArgs> healthy) {
            $.healthy = healthy;
            return this;
        }

        public Builder healthy(UpstreamHealthchecksActiveHealthyArgs healthy) {
            return healthy(Output.of(healthy));
        }

        public Builder httpPath(@Nullable Output<String> httpPath) {
            $.httpPath = httpPath;
            return this;
        }

        public Builder httpPath(String httpPath) {
            return httpPath(Output.of(httpPath));
        }

        public Builder httpsSni(@Nullable Output<String> httpsSni) {
            $.httpsSni = httpsSni;
            return this;
        }

        public Builder httpsSni(String httpsSni) {
            return httpsSni(Output.of(httpsSni));
        }

        public Builder httpsVerifyCertificate(@Nullable Output<Boolean> httpsVerifyCertificate) {
            $.httpsVerifyCertificate = httpsVerifyCertificate;
            return this;
        }

        public Builder httpsVerifyCertificate(Boolean httpsVerifyCertificate) {
            return httpsVerifyCertificate(Output.of(httpsVerifyCertificate));
        }

        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder unhealthy(@Nullable Output<UpstreamHealthchecksActiveUnhealthyArgs> unhealthy) {
            $.unhealthy = unhealthy;
            return this;
        }

        public Builder unhealthy(UpstreamHealthchecksActiveUnhealthyArgs unhealthy) {
            return unhealthy(Output.of(unhealthy));
        }

        public UpstreamHealthchecksActiveArgs build() {
            return $;
        }
    }

}
