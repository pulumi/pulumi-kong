// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kong.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UpstreamHealthchecksActiveUnhealthy {
    private @Nullable Integer httpFailures;
    private @Nullable List<Integer> httpStatuses;
    private @Nullable Integer interval;
    private @Nullable Integer tcpFailures;
    private @Nullable Integer timeouts;

    private UpstreamHealthchecksActiveUnhealthy() {}
    public Optional<Integer> httpFailures() {
        return Optional.ofNullable(this.httpFailures);
    }
    public List<Integer> httpStatuses() {
        return this.httpStatuses == null ? List.of() : this.httpStatuses;
    }
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    public Optional<Integer> tcpFailures() {
        return Optional.ofNullable(this.tcpFailures);
    }
    public Optional<Integer> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UpstreamHealthchecksActiveUnhealthy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer httpFailures;
        private @Nullable List<Integer> httpStatuses;
        private @Nullable Integer interval;
        private @Nullable Integer tcpFailures;
        private @Nullable Integer timeouts;
        public Builder() {}
        public Builder(UpstreamHealthchecksActiveUnhealthy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpFailures = defaults.httpFailures;
    	      this.httpStatuses = defaults.httpStatuses;
    	      this.interval = defaults.interval;
    	      this.tcpFailures = defaults.tcpFailures;
    	      this.timeouts = defaults.timeouts;
        }

        @CustomType.Setter
        public Builder httpFailures(@Nullable Integer httpFailures) {

            this.httpFailures = httpFailures;
            return this;
        }
        @CustomType.Setter
        public Builder httpStatuses(@Nullable List<Integer> httpStatuses) {

            this.httpStatuses = httpStatuses;
            return this;
        }
        public Builder httpStatuses(Integer... httpStatuses) {
            return httpStatuses(List.of(httpStatuses));
        }
        @CustomType.Setter
        public Builder interval(@Nullable Integer interval) {

            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder tcpFailures(@Nullable Integer tcpFailures) {

            this.tcpFailures = tcpFailures;
            return this;
        }
        @CustomType.Setter
        public Builder timeouts(@Nullable Integer timeouts) {

            this.timeouts = timeouts;
            return this;
        }
        public UpstreamHealthchecksActiveUnhealthy build() {
            final var _resultValue = new UpstreamHealthchecksActiveUnhealthy();
            _resultValue.httpFailures = httpFailures;
            _resultValue.httpStatuses = httpStatuses;
            _resultValue.interval = interval;
            _resultValue.tcpFailures = tcpFailures;
            _resultValue.timeouts = timeouts;
            return _resultValue;
        }
    }
}
